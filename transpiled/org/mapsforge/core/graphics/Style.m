//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/graphics/Style.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/mapsforge/core/graphics/Style.h"

__attribute__((unused)) static void OrgMapsforgeCoreGraphicsStyle_initWithNSString_withInt_(OrgMapsforgeCoreGraphicsStyle *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgMapsforgeCoreGraphicsStyle)

OrgMapsforgeCoreGraphicsStyle *OrgMapsforgeCoreGraphicsStyle_values_[2];

@implementation OrgMapsforgeCoreGraphicsStyle

+ (IOSObjectArray *)values {
  return OrgMapsforgeCoreGraphicsStyle_values();
}

+ (OrgMapsforgeCoreGraphicsStyle *)valueOfWithNSString:(NSString *)name {
  return OrgMapsforgeCoreGraphicsStyle_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgMapsforgeCoreGraphicsStyle;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreGraphicsStyle;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FILL", "LOrgMapsforgeCoreGraphicsStyle;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "STROKE", "LOrgMapsforgeCoreGraphicsStyle;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgMapsforgeCoreGraphicsStyle, FILL), &JreEnum(OrgMapsforgeCoreGraphicsStyle, STROKE), "Ljava/lang/Enum<Lorg/mapsforge/core/graphics/Style;>;" };
  static const J2ObjcClassInfo _OrgMapsforgeCoreGraphicsStyle = { "Style", "org.mapsforge.core.graphics", ptrTable, methods, fields, 7, 0x4011, 2, 2, -1, -1, -1, 4, -1 };
  return &_OrgMapsforgeCoreGraphicsStyle;
}

+ (void)initialize {
  if (self == [OrgMapsforgeCoreGraphicsStyle class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"FILL", @"STROKE",
    };
    for (jint i = 0; i < 2; i++) {
      (OrgMapsforgeCoreGraphicsStyle_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      OrgMapsforgeCoreGraphicsStyle_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(OrgMapsforgeCoreGraphicsStyle)
  }
}

@end

void OrgMapsforgeCoreGraphicsStyle_initWithNSString_withInt_(OrgMapsforgeCoreGraphicsStyle *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgMapsforgeCoreGraphicsStyle_values() {
  OrgMapsforgeCoreGraphicsStyle_initialize();
  return [IOSObjectArray arrayWithObjects:OrgMapsforgeCoreGraphicsStyle_values_ count:2 type:OrgMapsforgeCoreGraphicsStyle_class_()];
}

OrgMapsforgeCoreGraphicsStyle *OrgMapsforgeCoreGraphicsStyle_valueOfWithNSString_(NSString *name) {
  OrgMapsforgeCoreGraphicsStyle_initialize();
  for (int i = 0; i < 2; i++) {
    OrgMapsforgeCoreGraphicsStyle *e = OrgMapsforgeCoreGraphicsStyle_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgMapsforgeCoreGraphicsStyle *OrgMapsforgeCoreGraphicsStyle_fromOrdinal(NSUInteger ordinal) {
  OrgMapsforgeCoreGraphicsStyle_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return OrgMapsforgeCoreGraphicsStyle_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeCoreGraphicsStyle)
