//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/graphics/FontStyle.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/mapsforge/core/graphics/FontStyle.h"

__attribute__((unused)) static void OrgMapsforgeCoreGraphicsFontStyle_initWithNSString_withInt_(OrgMapsforgeCoreGraphicsFontStyle *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgMapsforgeCoreGraphicsFontStyle)

OrgMapsforgeCoreGraphicsFontStyle *OrgMapsforgeCoreGraphicsFontStyle_values_[4];

@implementation OrgMapsforgeCoreGraphicsFontStyle

+ (OrgMapsforgeCoreGraphicsFontStyle *)fromStringWithNSString:(NSString *)value {
  return OrgMapsforgeCoreGraphicsFontStyle_fromStringWithNSString_(value);
}

+ (IOSObjectArray *)values {
  return OrgMapsforgeCoreGraphicsFontStyle_values();
}

+ (OrgMapsforgeCoreGraphicsFontStyle *)valueOfWithNSString:(NSString *)name {
  return OrgMapsforgeCoreGraphicsFontStyle_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeCoreGraphicsFontStyle;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LOrgMapsforgeCoreGraphicsFontStyle;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreGraphicsFontStyle;", 0x9, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(fromStringWithNSString:);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOLD", "LOrgMapsforgeCoreGraphicsFontStyle;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BOLD_ITALIC", "LOrgMapsforgeCoreGraphicsFontStyle;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "ITALIC", "LOrgMapsforgeCoreGraphicsFontStyle;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NORMAL", "LOrgMapsforgeCoreGraphicsFontStyle;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "fromString", "LNSString;", "valueOf", &JreEnum(OrgMapsforgeCoreGraphicsFontStyle, BOLD), &JreEnum(OrgMapsforgeCoreGraphicsFontStyle, BOLD_ITALIC), &JreEnum(OrgMapsforgeCoreGraphicsFontStyle, ITALIC), &JreEnum(OrgMapsforgeCoreGraphicsFontStyle, NORMAL), "Ljava/lang/Enum<Lorg/mapsforge/core/graphics/FontStyle;>;" };
  static const J2ObjcClassInfo _OrgMapsforgeCoreGraphicsFontStyle = { "FontStyle", "org.mapsforge.core.graphics", ptrTable, methods, fields, 7, 0x4011, 3, 4, -1, -1, -1, 7, -1 };
  return &_OrgMapsforgeCoreGraphicsFontStyle;
}

+ (void)initialize {
  if (self == [OrgMapsforgeCoreGraphicsFontStyle class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"BOLD", @"BOLD_ITALIC", @"ITALIC", @"NORMAL",
    };
    for (jint i = 0; i < 4; i++) {
      (OrgMapsforgeCoreGraphicsFontStyle_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      OrgMapsforgeCoreGraphicsFontStyle_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(OrgMapsforgeCoreGraphicsFontStyle)
  }
}

@end

void OrgMapsforgeCoreGraphicsFontStyle_initWithNSString_withInt_(OrgMapsforgeCoreGraphicsFontStyle *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgMapsforgeCoreGraphicsFontStyle *OrgMapsforgeCoreGraphicsFontStyle_fromStringWithNSString_(NSString *value) {
  OrgMapsforgeCoreGraphicsFontStyle_initialize();
  if ([@"bold" isEqual:value]) {
    return JreEnum(OrgMapsforgeCoreGraphicsFontStyle, BOLD);
  }
  else if ([(@"bold_italic") isEqual:value]) {
    return JreEnum(OrgMapsforgeCoreGraphicsFontStyle, BOLD_ITALIC);
  }
  else if ([@"italic" isEqual:value]) {
    return JreEnum(OrgMapsforgeCoreGraphicsFontStyle, ITALIC);
  }
  else if ([@"normal" isEqual:value]) {
    return JreEnum(OrgMapsforgeCoreGraphicsFontStyle, NORMAL);
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Invalid value for FontStyle: ", value));
}

IOSObjectArray *OrgMapsforgeCoreGraphicsFontStyle_values() {
  OrgMapsforgeCoreGraphicsFontStyle_initialize();
  return [IOSObjectArray arrayWithObjects:OrgMapsforgeCoreGraphicsFontStyle_values_ count:4 type:OrgMapsforgeCoreGraphicsFontStyle_class_()];
}

OrgMapsforgeCoreGraphicsFontStyle *OrgMapsforgeCoreGraphicsFontStyle_valueOfWithNSString_(NSString *name) {
  OrgMapsforgeCoreGraphicsFontStyle_initialize();
  for (int i = 0; i < 4; i++) {
    OrgMapsforgeCoreGraphicsFontStyle *e = OrgMapsforgeCoreGraphicsFontStyle_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgMapsforgeCoreGraphicsFontStyle *OrgMapsforgeCoreGraphicsFontStyle_fromOrdinal(NSUInteger ordinal) {
  OrgMapsforgeCoreGraphicsFontStyle_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return OrgMapsforgeCoreGraphicsFontStyle_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeCoreGraphicsFontStyle)
