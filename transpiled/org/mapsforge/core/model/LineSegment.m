//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/model/LineSegment.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "org/mapsforge/core/model/LineSegment.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/core/model/Rectangle.h"

@interface OrgMapsforgeCoreModelLineSegment ()

+ (jint)codeWithOrgMapsforgeCoreModelRectangle:(OrgMapsforgeCoreModelRectangle *)r
                withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)p;

@end

inline jint OrgMapsforgeCoreModelLineSegment_get_INSIDE();
inline jint OrgMapsforgeCoreModelLineSegment_set_INSIDE(jint value);
inline jint *OrgMapsforgeCoreModelLineSegment_getRef_INSIDE();
static jint OrgMapsforgeCoreModelLineSegment_INSIDE = 0;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreModelLineSegment, INSIDE, jint)

inline jint OrgMapsforgeCoreModelLineSegment_get_LEFT();
inline jint OrgMapsforgeCoreModelLineSegment_set_LEFT(jint value);
inline jint *OrgMapsforgeCoreModelLineSegment_getRef_LEFT();
static jint OrgMapsforgeCoreModelLineSegment_LEFT = 1;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreModelLineSegment, LEFT, jint)

inline jint OrgMapsforgeCoreModelLineSegment_get_RIGHT();
inline jint OrgMapsforgeCoreModelLineSegment_set_RIGHT(jint value);
inline jint *OrgMapsforgeCoreModelLineSegment_getRef_RIGHT();
static jint OrgMapsforgeCoreModelLineSegment_RIGHT = 2;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreModelLineSegment, RIGHT, jint)

inline jint OrgMapsforgeCoreModelLineSegment_get_BOTTOM();
inline jint OrgMapsforgeCoreModelLineSegment_set_BOTTOM(jint value);
inline jint *OrgMapsforgeCoreModelLineSegment_getRef_BOTTOM();
static jint OrgMapsforgeCoreModelLineSegment_BOTTOM = 4;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreModelLineSegment, BOTTOM, jint)

inline jint OrgMapsforgeCoreModelLineSegment_get_TOP();
inline jint OrgMapsforgeCoreModelLineSegment_set_TOP(jint value);
inline jint *OrgMapsforgeCoreModelLineSegment_getRef_TOP();
static jint OrgMapsforgeCoreModelLineSegment_TOP = 8;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgMapsforgeCoreModelLineSegment, TOP, jint)

__attribute__((unused)) static jint OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(OrgMapsforgeCoreModelRectangle *r, OrgMapsforgeCoreModelPoint *p);

@implementation OrgMapsforgeCoreModelLineSegment

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)start
                    withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)end {
  OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(self, start, end);
  return self;
}

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)start
                    withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)direction
                                        withDouble:(jdouble)distance {
  OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withDouble_(self, start, direction, distance);
  return self;
}

- (OrgMapsforgeCoreModelLineSegment *)clipToRectangleWithOrgMapsforgeCoreModelRectangle:(OrgMapsforgeCoreModelRectangle *)r {
  OrgMapsforgeCoreModelPoint *a = self->start_;
  OrgMapsforgeCoreModelPoint *b = self->end_;
  jint codeStart = OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, a);
  jint codeEnd = OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, b);
  while (true) {
    if (0 == (codeStart | codeEnd)) {
      return create_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(a, b);
    }
    else if (0 != (codeStart & codeEnd)) {
      return nil;
    }
    else {
      jdouble newX;
      jdouble newY;
      jint outsideCode = (0 != codeStart) ? codeStart : codeEnd;
      if (0 != (outsideCode & OrgMapsforgeCoreModelLineSegment_TOP)) {
        newX = ((OrgMapsforgeCoreModelPoint *) nil_chk(a))->x_ + (((OrgMapsforgeCoreModelPoint *) nil_chk(b))->x_ - a->x_) * (((OrgMapsforgeCoreModelRectangle *) nil_chk(r))->top_ - a->y_) / (b->y_ - a->y_);
        newY = r->top_;
      }
      else if (0 != (outsideCode & OrgMapsforgeCoreModelLineSegment_BOTTOM)) {
        newX = ((OrgMapsforgeCoreModelPoint *) nil_chk(a))->x_ + (((OrgMapsforgeCoreModelPoint *) nil_chk(b))->x_ - a->x_) * (((OrgMapsforgeCoreModelRectangle *) nil_chk(r))->bottom_ - a->y_) / (b->y_ - a->y_);
        newY = r->bottom_;
      }
      else if (0 != (outsideCode & OrgMapsforgeCoreModelLineSegment_RIGHT)) {
        newY = ((OrgMapsforgeCoreModelPoint *) nil_chk(a))->y_ + (((OrgMapsforgeCoreModelPoint *) nil_chk(b))->y_ - a->y_) * (((OrgMapsforgeCoreModelRectangle *) nil_chk(r))->right_ - a->x_) / (b->x_ - a->x_);
        newX = r->right_;
      }
      else if (0 != (outsideCode & OrgMapsforgeCoreModelLineSegment_LEFT)) {
        newY = ((OrgMapsforgeCoreModelPoint *) nil_chk(a))->y_ + (((OrgMapsforgeCoreModelPoint *) nil_chk(b))->y_ - a->y_) * (((OrgMapsforgeCoreModelRectangle *) nil_chk(r))->left_ - a->x_) / (b->x_ - a->x_);
        newX = r->left_;
      }
      else {
        @throw create_JavaLangIllegalStateException_initWithNSString_(@"Should not get here");
      }
      if (outsideCode == codeStart) {
        a = create_OrgMapsforgeCoreModelPoint_initWithDouble_withDouble_(newX, newY);
        codeStart = OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, a);
      }
      else {
        b = create_OrgMapsforgeCoreModelPoint_initWithDouble_withDouble_(newX, newY);
        codeEnd = OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, b);
      }
    }
  }
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return true;
  }
  else if (!([obj isKindOfClass:[OrgMapsforgeCoreModelLineSegment class]])) {
    return false;
  }
  OrgMapsforgeCoreModelLineSegment *other = (OrgMapsforgeCoreModelLineSegment *) cast_chk(obj, [OrgMapsforgeCoreModelLineSegment class]);
  if ([((OrgMapsforgeCoreModelPoint *) nil_chk(((OrgMapsforgeCoreModelLineSegment *) nil_chk(other))->start_)) isEqual:self->start_] && [((OrgMapsforgeCoreModelPoint *) nil_chk(other->end_)) isEqual:self->end_]) {
    return true;
  }
  return false;
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + ((jint) [((OrgMapsforgeCoreModelPoint *) nil_chk(self->start_)) hash]);
  result = prime * result + ((jint) [((OrgMapsforgeCoreModelPoint *) nil_chk(self->end_)) hash]);
  return result;
}

- (jboolean)intersectsRectangleWithOrgMapsforgeCoreModelRectangle:(OrgMapsforgeCoreModelRectangle *)r
                                                      withBoolean:(jboolean)bias {
  jint codeStart = OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, self->start_);
  jint codeEnd = OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, self->end_);
  if (0 == (codeStart | codeEnd)) {
    return true;
  }
  else if (0 != (codeStart & codeEnd)) {
    return false;
  }
  return bias;
}

- (jdouble)length {
  return [((OrgMapsforgeCoreModelPoint *) nil_chk(start_)) distanceWithOrgMapsforgeCoreModelPoint:end_];
}

- (OrgMapsforgeCoreModelPoint *)pointAlongLineSegmentWithDouble:(jdouble)distance {
  if (((OrgMapsforgeCoreModelPoint *) nil_chk(start_))->x_ == ((OrgMapsforgeCoreModelPoint *) nil_chk(end_))->x_) {
    return create_OrgMapsforgeCoreModelPoint_initWithDouble_withDouble_(start_->x_, start_->y_ + distance);
  }
  else {
    jdouble slope = (end_->y_ - start_->y_) / (end_->x_ - start_->x_);
    jdouble dx = JavaLangMath_sqrtWithDouble_((distance * distance) / (1 + (slope * slope)));
    if (end_->x_ < start_->x_) {
      JreTimesAssignDoubleD(&dx, -1);
    }
    return create_OrgMapsforgeCoreModelPoint_initWithDouble_withDouble_(start_->x_ + dx, start_->y_ + slope * dx);
  }
}

- (OrgMapsforgeCoreModelLineSegment *)reverse {
  return create_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(self->end_, self->start_);
}

- (OrgMapsforgeCoreModelLineSegment *)subSegmentWithDouble:(jdouble)offset
                                                withDouble:(jdouble)length {
  OrgMapsforgeCoreModelPoint *subSegmentStart = [self pointAlongLineSegmentWithDouble:offset];
  OrgMapsforgeCoreModelPoint *subSegmentEnd = [self pointAlongLineSegmentWithDouble:offset + length];
  return create_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(subSegmentStart, subSegmentEnd);
}

- (NSString *)description {
  JavaLangStringBuilder *stringBuilder = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([stringBuilder appendWithId:start_])) appendWithNSString:@" "])) appendWithId:end_];
  return [stringBuilder description];
}

+ (jint)codeWithOrgMapsforgeCoreModelRectangle:(OrgMapsforgeCoreModelRectangle *)r
                withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)p {
  return OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(r, p);
}

- (void)dealloc {
  RELEASE_(start_);
  RELEASE_(end_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelLineSegment;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelPoint;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelLineSegment;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelLineSegment;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreModelPoint:);
  methods[1].selector = @selector(initWithOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreModelPoint:withDouble:);
  methods[2].selector = @selector(clipToRectangleWithOrgMapsforgeCoreModelRectangle:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(intersectsRectangleWithOrgMapsforgeCoreModelRectangle:withBoolean:);
  methods[6].selector = @selector(length);
  methods[7].selector = @selector(pointAlongLineSegmentWithDouble:);
  methods[8].selector = @selector(reverse);
  methods[9].selector = @selector(subSegmentWithDouble:withDouble:);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(codeWithOrgMapsforgeCoreModelRectangle:withOrgMapsforgeCoreModelPoint:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSIDE", "I", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
    { "LEFT", "I", .constantValue.asLong = 0, 0xa, -1, 17, -1, -1 },
    { "RIGHT", "I", .constantValue.asLong = 0, 0xa, -1, 18, -1, -1 },
    { "BOTTOM", "I", .constantValue.asLong = 0, 0xa, -1, 19, -1, -1 },
    { "TOP", "I", .constantValue.asLong = 0, 0xa, -1, 20, -1, -1 },
    { "start_", "LOrgMapsforgeCoreModelPoint;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "end_", "LOrgMapsforgeCoreModelPoint;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreModelPoint;", "LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreModelPoint;D", "clipToRectangle", "LOrgMapsforgeCoreModelRectangle;", "equals", "LNSObject;", "hashCode", "intersectsRectangle", "LOrgMapsforgeCoreModelRectangle;Z", "pointAlongLineSegment", "D", "subSegment", "DD", "toString", "code", "LOrgMapsforgeCoreModelRectangle;LOrgMapsforgeCoreModelPoint;", &OrgMapsforgeCoreModelLineSegment_INSIDE, &OrgMapsforgeCoreModelLineSegment_LEFT, &OrgMapsforgeCoreModelLineSegment_RIGHT, &OrgMapsforgeCoreModelLineSegment_BOTTOM, &OrgMapsforgeCoreModelLineSegment_TOP };
  static const J2ObjcClassInfo _OrgMapsforgeCoreModelLineSegment = { "LineSegment", "org.mapsforge.core.model", ptrTable, methods, fields, 7, 0x11, 12, 7, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeCoreModelLineSegment;
}

@end

void OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(OrgMapsforgeCoreModelLineSegment *self, OrgMapsforgeCoreModelPoint *start, OrgMapsforgeCoreModelPoint *end) {
  NSObject_init(self);
  JreStrongAssign(&self->start_, start);
  JreStrongAssign(&self->end_, end);
}

OrgMapsforgeCoreModelLineSegment *new_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(OrgMapsforgeCoreModelPoint *start, OrgMapsforgeCoreModelPoint *end) {
  J2OBJC_NEW_IMPL(OrgMapsforgeCoreModelLineSegment, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_, start, end)
}

OrgMapsforgeCoreModelLineSegment *create_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(OrgMapsforgeCoreModelPoint *start, OrgMapsforgeCoreModelPoint *end) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeCoreModelLineSegment, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_, start, end)
}

void OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withDouble_(OrgMapsforgeCoreModelLineSegment *self, OrgMapsforgeCoreModelPoint *start, OrgMapsforgeCoreModelPoint *direction, jdouble distance) {
  NSObject_init(self);
  JreStrongAssign(&self->start_, start);
  JreStrongAssign(&self->end_, [create_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_(start, direction) pointAlongLineSegmentWithDouble:distance]);
}

OrgMapsforgeCoreModelLineSegment *new_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withDouble_(OrgMapsforgeCoreModelPoint *start, OrgMapsforgeCoreModelPoint *direction, jdouble distance) {
  J2OBJC_NEW_IMPL(OrgMapsforgeCoreModelLineSegment, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withDouble_, start, direction, distance)
}

OrgMapsforgeCoreModelLineSegment *create_OrgMapsforgeCoreModelLineSegment_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withDouble_(OrgMapsforgeCoreModelPoint *start, OrgMapsforgeCoreModelPoint *direction, jdouble distance) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeCoreModelLineSegment, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withDouble_, start, direction, distance)
}

jint OrgMapsforgeCoreModelLineSegment_codeWithOrgMapsforgeCoreModelRectangle_withOrgMapsforgeCoreModelPoint_(OrgMapsforgeCoreModelRectangle *r, OrgMapsforgeCoreModelPoint *p) {
  OrgMapsforgeCoreModelLineSegment_initialize();
  jint code = OrgMapsforgeCoreModelLineSegment_INSIDE;
  if (((OrgMapsforgeCoreModelPoint *) nil_chk(p))->x_ < ((OrgMapsforgeCoreModelRectangle *) nil_chk(r))->left_) {
    code |= OrgMapsforgeCoreModelLineSegment_LEFT;
  }
  else if (p->x_ > r->right_) {
    code |= OrgMapsforgeCoreModelLineSegment_RIGHT;
  }
  if (p->y_ > r->bottom_) {
    code |= OrgMapsforgeCoreModelLineSegment_BOTTOM;
  }
  else if (p->y_ < r->top_) {
    code |= OrgMapsforgeCoreModelLineSegment_TOP;
  }
  return code;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeCoreModelLineSegment)
