//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/mapelements/WayTextContainer.java
//

#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "org/mapsforge/core/graphics/Canvas.h"
#include "org/mapsforge/core/graphics/Display.h"
#include "org/mapsforge/core/graphics/Matrix.h"
#include "org/mapsforge/core/graphics/Paint.h"
#include "org/mapsforge/core/mapelements/MapElementContainer.h"
#include "org/mapsforge/core/mapelements/WayTextContainer.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/core/model/Rectangle.h"

@interface OrgMapsforgeCoreMapelementsWayTextContainer () {
 @public
  id<OrgMapsforgeCoreGraphicsPaint> paintFront_;
  id<OrgMapsforgeCoreGraphicsPaint> paintBack_;
  NSString *text_;
  OrgMapsforgeCoreModelPoint *end_;
}

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeCoreMapelementsWayTextContainer, paintFront_, id<OrgMapsforgeCoreGraphicsPaint>)
J2OBJC_FIELD_SETTER(OrgMapsforgeCoreMapelementsWayTextContainer, paintBack_, id<OrgMapsforgeCoreGraphicsPaint>)
J2OBJC_FIELD_SETTER(OrgMapsforgeCoreMapelementsWayTextContainer, text_, NSString *)
J2OBJC_FIELD_SETTER(OrgMapsforgeCoreMapelementsWayTextContainer, end_, OrgMapsforgeCoreModelPoint *)

@implementation OrgMapsforgeCoreMapelementsWayTextContainer

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point
                    withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)end
               withOrgMapsforgeCoreGraphicsDisplay:(OrgMapsforgeCoreGraphicsDisplay *)display
                                           withInt:(jint)priority
                                      withNSString:(NSString *)text
                 withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFront
                 withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintBack
                                        withDouble:(jdouble)textHeight {
  OrgMapsforgeCoreMapelementsWayTextContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withNSString_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withDouble_(self, point, end, display, priority, text, paintFront, paintBack, textHeight);
  return self;
}

- (void)drawWithOrgMapsforgeCoreGraphicsCanvas:(id<OrgMapsforgeCoreGraphicsCanvas>)canvas
                withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)origin
            withOrgMapsforgeCoreGraphicsMatrix:(id<OrgMapsforgeCoreGraphicsMatrix>)matrix {
  OrgMapsforgeCoreModelPoint *adjustedStart = [((OrgMapsforgeCoreModelPoint *) nil_chk(xy_)) offsetWithDouble:-((OrgMapsforgeCoreModelPoint *) nil_chk(origin))->x_ withDouble:-origin->y_];
  OrgMapsforgeCoreModelPoint *adjustedEnd = [((OrgMapsforgeCoreModelPoint *) nil_chk(end_)) offsetWithDouble:-origin->x_ withDouble:-origin->y_];
  if (self->paintBack_ != nil) {
    [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawTextRotatedWithNSString:text_ withInt:JreFpToInt((((OrgMapsforgeCoreModelPoint *) nil_chk(adjustedStart))->x_)) withInt:JreFpToInt((adjustedStart->y_)) withInt:JreFpToInt((((OrgMapsforgeCoreModelPoint *) nil_chk(adjustedEnd))->x_)) withInt:JreFpToInt((adjustedEnd->y_)) withOrgMapsforgeCoreGraphicsPaint:self->paintBack_];
  }
  [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawTextRotatedWithNSString:text_ withInt:JreFpToInt((((OrgMapsforgeCoreModelPoint *) nil_chk(adjustedStart))->x_)) withInt:JreFpToInt((adjustedStart->y_)) withInt:JreFpToInt((((OrgMapsforgeCoreModelPoint *) nil_chk(adjustedEnd))->x_)) withInt:JreFpToInt((adjustedEnd->y_)) withOrgMapsforgeCoreGraphicsPaint:self->paintFront_];
}

- (NSString *)description {
  JavaLangStringBuilder *stringBuilder = create_JavaLangStringBuilder_init();
  [stringBuilder appendWithNSString:[super description]];
  [stringBuilder appendWithNSString:@", text="];
  [stringBuilder appendWithNSString:self->text_];
  return [stringBuilder description];
}

- (void)dealloc {
  RELEASE_(paintFront_);
  RELEASE_(paintBack_);
  RELEASE_(text_);
  RELEASE_(end_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreGraphicsDisplay:withInt:withNSString:withOrgMapsforgeCoreGraphicsPaint:withOrgMapsforgeCoreGraphicsPaint:withDouble:);
  methods[1].selector = @selector(drawWithOrgMapsforgeCoreGraphicsCanvas:withOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreGraphicsMatrix:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "paintFront_", "LOrgMapsforgeCoreGraphicsPaint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "paintBack_", "LOrgMapsforgeCoreGraphicsPaint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "text_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "end_", "LOrgMapsforgeCoreModelPoint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreGraphicsDisplay;ILNSString;LOrgMapsforgeCoreGraphicsPaint;LOrgMapsforgeCoreGraphicsPaint;D", "draw", "LOrgMapsforgeCoreGraphicsCanvas;LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreGraphicsMatrix;", "toString" };
  static const J2ObjcClassInfo _OrgMapsforgeCoreMapelementsWayTextContainer = { "WayTextContainer", "org.mapsforge.core.mapelements", ptrTable, methods, fields, 7, 0x1, 3, 4, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeCoreMapelementsWayTextContainer;
}

@end

void OrgMapsforgeCoreMapelementsWayTextContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withNSString_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withDouble_(OrgMapsforgeCoreMapelementsWayTextContainer *self, OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreModelPoint *end, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, NSString *text, id<OrgMapsforgeCoreGraphicsPaint> paintFront, id<OrgMapsforgeCoreGraphicsPaint> paintBack, jdouble textHeight) {
  OrgMapsforgeCoreMapelementsMapElementContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_(self, point, display, priority);
  JreStrongAssign(&self->text_, text);
  JreStrongAssign(&self->paintFront_, paintFront);
  JreStrongAssign(&self->paintBack_, paintBack);
  JreStrongAssign(&self->end_, end);
  JreStrongAssign(&self->boundary_, nil);
  JreStrongAssign(&self->boundaryAbsolute_, [create_OrgMapsforgeCoreModelRectangle_initWithDouble_withDouble_withDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(((OrgMapsforgeCoreModelPoint *) nil_chk(point))->x_, ((OrgMapsforgeCoreModelPoint *) nil_chk(end))->x_), JavaLangMath_minWithDouble_withDouble_(point->y_, end->y_), JavaLangMath_maxWithDouble_withDouble_(point->x_, end->x_), JavaLangMath_maxWithDouble_withDouble_(point->y_, end->y_)) envelopeWithDouble:textHeight / 2.0]);
}

OrgMapsforgeCoreMapelementsWayTextContainer *new_OrgMapsforgeCoreMapelementsWayTextContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withNSString_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withDouble_(OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreModelPoint *end, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, NSString *text, id<OrgMapsforgeCoreGraphicsPaint> paintFront, id<OrgMapsforgeCoreGraphicsPaint> paintBack, jdouble textHeight) {
  J2OBJC_NEW_IMPL(OrgMapsforgeCoreMapelementsWayTextContainer, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withNSString_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withDouble_, point, end, display, priority, text, paintFront, paintBack, textHeight)
}

OrgMapsforgeCoreMapelementsWayTextContainer *create_OrgMapsforgeCoreMapelementsWayTextContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withNSString_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withDouble_(OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreModelPoint *end, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, NSString *text, id<OrgMapsforgeCoreGraphicsPaint> paintFront, id<OrgMapsforgeCoreGraphicsPaint> paintBack, jdouble textHeight) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeCoreMapelementsWayTextContainer, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withNSString_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withDouble_, point, end, display, priority, text, paintFront, paintBack, textHeight)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeCoreMapelementsWayTextContainer)
