//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/mapelements/SymbolContainer.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/core/graphics/Bitmap.h"
#include "org/mapsforge/core/graphics/Canvas.h"
#include "org/mapsforge/core/graphics/Display.h"
#include "org/mapsforge/core/graphics/Matrix.h"
#include "org/mapsforge/core/mapelements/MapElementContainer.h"
#include "org/mapsforge/core/mapelements/SymbolContainer.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/core/model/Rectangle.h"

@implementation OrgMapsforgeCoreMapelementsSymbolContainer

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point
               withOrgMapsforgeCoreGraphicsDisplay:(OrgMapsforgeCoreGraphicsDisplay *)display
                                           withInt:(jint)priority
                withOrgMapsforgeCoreGraphicsBitmap:(id<OrgMapsforgeCoreGraphicsBitmap>)symbol {
  OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_(self, point, display, priority, symbol);
  return self;
}

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point
               withOrgMapsforgeCoreGraphicsDisplay:(OrgMapsforgeCoreGraphicsDisplay *)display
                                           withInt:(jint)priority
                withOrgMapsforgeCoreGraphicsBitmap:(id<OrgMapsforgeCoreGraphicsBitmap>)symbol
                                         withFloat:(jfloat)theta
                                       withBoolean:(jboolean)alignCenter {
  OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_(self, point, display, priority, symbol, theta, alignCenter);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if (![super isEqual:obj]) {
    return false;
  }
  if (!([obj isKindOfClass:[OrgMapsforgeCoreMapelementsSymbolContainer class]])) {
    return false;
  }
  OrgMapsforgeCoreMapelementsSymbolContainer *other = (OrgMapsforgeCoreMapelementsSymbolContainer *) cast_chk(obj, [OrgMapsforgeCoreMapelementsSymbolContainer class]);
  if (self->symbol_ != ((OrgMapsforgeCoreMapelementsSymbolContainer *) nil_chk(other))->symbol_) {
    return false;
  }
  return true;
}

- (NSUInteger)hash {
  jint result = ((jint) [super hash]);
  result = 31 * result + ((jint) [((id<OrgMapsforgeCoreGraphicsBitmap>) nil_chk(symbol_)) hash]);
  return result;
}

- (void)drawWithOrgMapsforgeCoreGraphicsCanvas:(id<OrgMapsforgeCoreGraphicsCanvas>)canvas
                withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)origin
            withOrgMapsforgeCoreGraphicsMatrix:(id<OrgMapsforgeCoreGraphicsMatrix>)matrix {
  [((id<OrgMapsforgeCoreGraphicsMatrix>) nil_chk(matrix)) reset];
  [matrix translateWithFloat:JreFpToInt((((OrgMapsforgeCoreModelPoint *) nil_chk(self->xy_))->x_ - ((OrgMapsforgeCoreModelPoint *) nil_chk(origin))->x_ + ((OrgMapsforgeCoreModelRectangle *) nil_chk(boundary_))->left_)) withFloat:JreFpToInt((self->xy_->y_ - origin->y_ + boundary_->top_))];
  if (theta_ != 0 && alignCenter_) {
    [matrix rotateWithFloat:theta_ withFloat:(jfloat) -((OrgMapsforgeCoreModelRectangle *) nil_chk(boundary_))->left_ withFloat:(jfloat) -boundary_->top_];
  }
  else {
    [matrix rotateWithFloat:theta_];
  }
  [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawBitmapWithOrgMapsforgeCoreGraphicsBitmap:self->symbol_ withOrgMapsforgeCoreGraphicsMatrix:matrix];
}

- (void)dealloc {
  RELEASE_(symbol_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreGraphicsDisplay:withInt:withOrgMapsforgeCoreGraphicsBitmap:);
  methods[1].selector = @selector(initWithOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreGraphicsDisplay:withInt:withOrgMapsforgeCoreGraphicsBitmap:withFloat:withBoolean:);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(drawWithOrgMapsforgeCoreGraphicsCanvas:withOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreGraphicsMatrix:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alignCenter_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "symbol_", "LOrgMapsforgeCoreGraphicsBitmap;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "theta_", "F", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreGraphicsDisplay;ILOrgMapsforgeCoreGraphicsBitmap;", "LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreGraphicsDisplay;ILOrgMapsforgeCoreGraphicsBitmap;FZ", "equals", "LNSObject;", "hashCode", "draw", "LOrgMapsforgeCoreGraphicsCanvas;LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreGraphicsMatrix;" };
  static const J2ObjcClassInfo _OrgMapsforgeCoreMapelementsSymbolContainer = { "SymbolContainer", "org.mapsforge.core.mapelements", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeCoreMapelementsSymbolContainer;
}

@end

void OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_(OrgMapsforgeCoreMapelementsSymbolContainer *self, OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, id<OrgMapsforgeCoreGraphicsBitmap> symbol) {
  OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_(self, point, display, priority, symbol, 0, true);
}

OrgMapsforgeCoreMapelementsSymbolContainer *new_OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_(OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, id<OrgMapsforgeCoreGraphicsBitmap> symbol) {
  J2OBJC_NEW_IMPL(OrgMapsforgeCoreMapelementsSymbolContainer, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_, point, display, priority, symbol)
}

OrgMapsforgeCoreMapelementsSymbolContainer *create_OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_(OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, id<OrgMapsforgeCoreGraphicsBitmap> symbol) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeCoreMapelementsSymbolContainer, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_, point, display, priority, symbol)
}

void OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_(OrgMapsforgeCoreMapelementsSymbolContainer *self, OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, id<OrgMapsforgeCoreGraphicsBitmap> symbol, jfloat theta, jboolean alignCenter) {
  OrgMapsforgeCoreMapelementsMapElementContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_(self, point, display, priority);
  JreStrongAssign(&self->symbol_, symbol);
  self->theta_ = theta;
  self->alignCenter_ = alignCenter;
  if (alignCenter) {
    jdouble halfWidth = [((id<OrgMapsforgeCoreGraphicsBitmap>) nil_chk(self->symbol_)) getWidth] / 2.0;
    jdouble halfHeight = [((id<OrgMapsforgeCoreGraphicsBitmap>) nil_chk(self->symbol_)) getHeight] / 2.0;
    JreStrongAssignAndConsume(&self->boundary_, new_OrgMapsforgeCoreModelRectangle_initWithDouble_withDouble_withDouble_withDouble_(-halfWidth, -halfHeight, halfWidth, halfHeight));
  }
  else {
    JreStrongAssignAndConsume(&self->boundary_, new_OrgMapsforgeCoreModelRectangle_initWithDouble_withDouble_withDouble_withDouble_(0, 0, [((id<OrgMapsforgeCoreGraphicsBitmap>) nil_chk(self->symbol_)) getWidth], [((id<OrgMapsforgeCoreGraphicsBitmap>) nil_chk(self->symbol_)) getHeight]));
  }
  [((id<OrgMapsforgeCoreGraphicsBitmap>) nil_chk(self->symbol_)) incrementRefCount];
}

OrgMapsforgeCoreMapelementsSymbolContainer *new_OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_(OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, id<OrgMapsforgeCoreGraphicsBitmap> symbol, jfloat theta, jboolean alignCenter) {
  J2OBJC_NEW_IMPL(OrgMapsforgeCoreMapelementsSymbolContainer, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_, point, display, priority, symbol, theta, alignCenter)
}

OrgMapsforgeCoreMapelementsSymbolContainer *create_OrgMapsforgeCoreMapelementsSymbolContainer_initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_(OrgMapsforgeCoreModelPoint *point, OrgMapsforgeCoreGraphicsDisplay *display, jint priority, id<OrgMapsforgeCoreGraphicsBitmap> symbol, jfloat theta, jboolean alignCenter) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeCoreMapelementsSymbolContainer, initWithOrgMapsforgeCoreModelPoint_withOrgMapsforgeCoreGraphicsDisplay_withInt_withOrgMapsforgeCoreGraphicsBitmap_withFloat_withBoolean_, point, display, priority, symbol, theta, alignCenter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeCoreMapelementsSymbolContainer)
