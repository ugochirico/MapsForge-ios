//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/model/MapViewPosition.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Math.h"
#include "java/lang/Runnable.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "org/mapsforge/core/model/BoundingBox.h"
#include "org/mapsforge/core/model/LatLong.h"
#include "org/mapsforge/core/model/MapPosition.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/core/util/MercatorProjection.h"
#include "org/mapsforge/map/model/DisplayModel.h"
#include "org/mapsforge/map/model/MapViewPosition.h"
#include "org/mapsforge/map/model/common/Observable.h"
#include "org/mapsforge/map/model/common/PreferencesFacade.h"
#include "org/mapsforge/map/util/PausableThread.h"

@interface OrgMapsforgeMapModelMapViewPosition () {
 @public
  OrgMapsforgeMapModelDisplayModel *displayModel_;
  jdouble latitude_;
  jdouble longitude_;
  OrgMapsforgeCoreModelBoundingBox *mapLimit_;
  OrgMapsforgeCoreModelLatLong *pivot_;
  jdouble scaleFactor_;
  OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *zoomAnimator_;
  jbyte zoomLevel_;
  jbyte zoomLevelMax_;
  jbyte zoomLevelMin_;
}

+ (jboolean)isNanWithDoubleArray:(IOSDoubleArray *)values;

- (void)setCenterInternalWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong;

- (void)setZoomLevelInternalWithInt:(jint)zoomLevel;

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapModelMapViewPosition, displayModel_, OrgMapsforgeMapModelDisplayModel *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapModelMapViewPosition, mapLimit_, OrgMapsforgeCoreModelBoundingBox *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapModelMapViewPosition, pivot_, OrgMapsforgeCoreModelLatLong *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapModelMapViewPosition, zoomAnimator_, OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_LATITUDE();
static NSString *OrgMapsforgeMapModelMapViewPosition_LATITUDE = @"latitude";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, LATITUDE, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_LATITUDE_MAX();
static NSString *OrgMapsforgeMapModelMapViewPosition_LATITUDE_MAX = @"latitudeMax";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, LATITUDE_MAX, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_LATITUDE_MIN();
static NSString *OrgMapsforgeMapModelMapViewPosition_LATITUDE_MIN = @"latitudeMin";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, LATITUDE_MIN, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_LONGITUDE();
static NSString *OrgMapsforgeMapModelMapViewPosition_LONGITUDE = @"longitude";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, LONGITUDE, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_LONGITUDE_MAX();
static NSString *OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MAX = @"longitudeMax";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, LONGITUDE_MAX, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_LONGITUDE_MIN();
static NSString *OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MIN = @"longitudeMin";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, LONGITUDE_MIN, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_ZOOM_LEVEL();
static NSString *OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL = @"zoomLevel";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, ZOOM_LEVEL, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_ZOOM_LEVEL_MAX();
static NSString *OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MAX = @"zoomLevelMax";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, ZOOM_LEVEL_MAX, NSString *)

inline NSString *OrgMapsforgeMapModelMapViewPosition_get_ZOOM_LEVEL_MIN();
static NSString *OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MIN = @"zoomLevelMin";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapModelMapViewPosition, ZOOM_LEVEL_MIN, NSString *)

__attribute__((unused)) static jboolean OrgMapsforgeMapModelMapViewPosition_isNanWithDoubleArray_(IOSDoubleArray *values);

__attribute__((unused)) static void OrgMapsforgeMapModelMapViewPosition_setCenterInternalWithOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition *self, OrgMapsforgeCoreModelLatLong *latLong);

__attribute__((unused)) static void OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(OrgMapsforgeMapModelMapViewPosition *self, jint zoomLevel);

@interface OrgMapsforgeMapModelMapViewPosition_ZoomAnimator () {
 @public
  OrgMapsforgeMapModelMapViewPosition *this$0_;
  jboolean executeAnimation_;
  jlong timeEnd_;
  jlong timeStart_;
}

- (jdouble)calculateScaleFactorWithFloat:(jfloat)percent;

@end

inline jint OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_get_DEFAULT_DURATION();
#define OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_DEFAULT_DURATION 250
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator, DEFAULT_DURATION, jint)

inline jint OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_get_FRAME_LENGTH_IN_MS();
#define OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_FRAME_LENGTH_IN_MS 15
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator, FRAME_LENGTH_IN_MS, jint)

__attribute__((unused)) static jdouble OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_calculateScaleFactorWithFloat_(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *self, jfloat percent);

@interface OrgMapsforgeMapModelMapViewPosition_1 : NSObject < JavaLangRunnable > {
 @public
  OrgMapsforgeMapModelMapViewPosition *this$0_;
  OrgMapsforgeCoreModelLatLong *val$pos_;
}

- (instancetype)initWithOrgMapsforgeMapModelMapViewPosition:(OrgMapsforgeMapModelMapViewPosition *)outer$
                           withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapModelMapViewPosition_1)

__attribute__((unused)) static void OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition_1 *self, OrgMapsforgeMapModelMapViewPosition *outer$, OrgMapsforgeCoreModelLatLong *capture$0);

__attribute__((unused)) static OrgMapsforgeMapModelMapViewPosition_1 *new_OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition *outer$, OrgMapsforgeCoreModelLatLong *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapModelMapViewPosition_1 *create_OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition *outer$, OrgMapsforgeCoreModelLatLong *capture$0);

@implementation OrgMapsforgeMapModelMapViewPosition

+ (jboolean)isNanWithDoubleArray:(IOSDoubleArray *)values {
  return OrgMapsforgeMapModelMapViewPosition_isNanWithDoubleArray_(values);
}

- (instancetype)initWithOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel {
  OrgMapsforgeMapModelMapViewPosition_initWithOrgMapsforgeMapModelDisplayModel_(self, displayModel);
  return self;
}

- (void)animateToWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)pos {
  [create_JavaLangThread_initWithJavaLangRunnable_(create_OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(self, pos)) start];
}

- (jboolean)animationInProgress {
  return self->scaleFactor_ != OrgMapsforgeCoreUtilMercatorProjection_zoomLevelToScaleFactorWithByte_(self->zoomLevel_);
}

- (void)destroy {
  [((OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *) nil_chk(self->zoomAnimator_)) interrupt];
}

- (OrgMapsforgeCoreModelLatLong *)getCenter {
  @synchronized(self) {
    return create_OrgMapsforgeCoreModelLatLong_initWithDouble_withDouble_(self->latitude_, self->longitude_);
  }
}

- (OrgMapsforgeCoreModelBoundingBox *)getMapLimit {
  @synchronized(self) {
    return self->mapLimit_;
  }
}

- (OrgMapsforgeCoreModelMapPosition *)getMapPosition {
  @synchronized(self) {
    return create_OrgMapsforgeCoreModelMapPosition_initWithOrgMapsforgeCoreModelLatLong_withByte_([self getCenter], self->zoomLevel_);
  }
}

- (OrgMapsforgeCoreModelLatLong *)getPivot {
  @synchronized(self) {
    return self->pivot_;
  }
}

- (OrgMapsforgeCoreModelPoint *)getPivotXYWithByte:(jbyte)zoomLevel {
  @synchronized(self) {
    if (self->pivot_ != nil) {
      return OrgMapsforgeCoreUtilMercatorProjection_getPixelWithOrgMapsforgeCoreModelLatLong_withLong_(self->pivot_, OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithByte_withInt_(zoomLevel, [((OrgMapsforgeMapModelDisplayModel *) nil_chk(displayModel_)) getTileSize]));
    }
    return nil;
  }
}

- (jdouble)getScaleFactor {
  @synchronized(self) {
    return self->scaleFactor_;
  }
}

- (jbyte)getZoomLevel {
  @synchronized(self) {
    return self->zoomLevel_;
  }
}

- (jbyte)getZoomLevelMax {
  @synchronized(self) {
    return self->zoomLevelMax_;
  }
}

- (jbyte)getZoomLevelMin {
  @synchronized(self) {
    return self->zoomLevelMin_;
  }
}

- (void)init__WithOrgMapsforgeMapModelCommonPreferencesFacade:(id<OrgMapsforgeMapModelCommonPreferencesFacade>)preferencesFacade {
  @synchronized(self) {
    self->latitude_ = [((id<OrgMapsforgeMapModelCommonPreferencesFacade>) nil_chk(preferencesFacade)) getDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE withDouble:0];
    self->longitude_ = [preferencesFacade getDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE withDouble:0];
    jdouble maxLatitude = [preferencesFacade getDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE_MAX withDouble:JavaLangDouble_NaN];
    jdouble minLatitude = [preferencesFacade getDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE_MIN withDouble:JavaLangDouble_NaN];
    jdouble maxLongitude = [preferencesFacade getDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MAX withDouble:JavaLangDouble_NaN];
    jdouble minLongitude = [preferencesFacade getDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MIN withDouble:JavaLangDouble_NaN];
    if (OrgMapsforgeMapModelMapViewPosition_isNanWithDoubleArray_([IOSDoubleArray arrayWithDoubles:(jdouble[]){ maxLatitude, minLatitude, maxLongitude, minLongitude } count:4])) {
      JreStrongAssign(&self->mapLimit_, nil);
    }
    else {
      JreStrongAssignAndConsume(&self->mapLimit_, new_OrgMapsforgeCoreModelBoundingBox_initWithDouble_withDouble_withDouble_withDouble_(minLatitude, minLongitude, maxLatitude, maxLongitude));
    }
    self->zoomLevel_ = [preferencesFacade getByteWithNSString:OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL withByte:(jbyte) 0];
    self->zoomLevelMax_ = [preferencesFacade getByteWithNSString:OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MAX withByte:JavaLangByte_MAX_VALUE];
    self->zoomLevelMin_ = [preferencesFacade getByteWithNSString:OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MIN withByte:(jbyte) 0];
    self->scaleFactor_ = JavaLangMath_powWithDouble_withDouble_(2, self->zoomLevel_);
  }
}

- (void)moveCenterWithDouble:(jdouble)moveHorizontal
                  withDouble:(jdouble)moveVertical {
  [self moveCenterAndZoomWithDouble:moveHorizontal withDouble:moveVertical withByte:(jbyte) 0];
}

- (void)moveCenterAndZoomWithDouble:(jdouble)moveHorizontal
                         withDouble:(jdouble)moveVertical
                           withByte:(jbyte)zoomLevelDiff {
  @synchronized(self) {
    jlong mapSize = OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithByte_withInt_(self->zoomLevel_, [((OrgMapsforgeMapModelDisplayModel *) nil_chk(self->displayModel_)) getTileSize]);
    jdouble pixelX = OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithDouble_withLong_(self->longitude_, mapSize) - moveHorizontal;
    jdouble pixelY = OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withLong_(self->latitude_, mapSize) - moveVertical;
    pixelX = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(0, pixelX), mapSize);
    pixelY = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(0, pixelY), mapSize);
    jdouble newLatitude = OrgMapsforgeCoreUtilMercatorProjection_pixelYToLatitudeWithDouble_withLong_(pixelY, mapSize);
    jdouble newLongitude = OrgMapsforgeCoreUtilMercatorProjection_pixelXToLongitudeWithDouble_withLong_(pixelX, mapSize);
    OrgMapsforgeMapModelMapViewPosition_setCenterInternalWithOrgMapsforgeCoreModelLatLong_(self, create_OrgMapsforgeCoreModelLatLong_initWithDouble_withDouble_(newLatitude, newLongitude));
    OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(self, self->zoomLevel_ + zoomLevelDiff);
  }
  [self notifyObservers];
}

- (void)saveWithOrgMapsforgeMapModelCommonPreferencesFacade:(id<OrgMapsforgeMapModelCommonPreferencesFacade>)preferencesFacade {
  @synchronized(self) {
    [((id<OrgMapsforgeMapModelCommonPreferencesFacade>) nil_chk(preferencesFacade)) putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE withDouble:self->latitude_];
    [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE withDouble:self->longitude_];
    if (self->mapLimit_ == nil) {
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE_MAX withDouble:JavaLangDouble_NaN];
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE_MIN withDouble:JavaLangDouble_NaN];
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MAX withDouble:JavaLangDouble_NaN];
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MIN withDouble:JavaLangDouble_NaN];
    }
    else {
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE_MAX withDouble:self->mapLimit_->maxLatitude_];
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LATITUDE_MIN withDouble:((OrgMapsforgeCoreModelBoundingBox *) nil_chk(self->mapLimit_))->minLatitude_];
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MAX withDouble:((OrgMapsforgeCoreModelBoundingBox *) nil_chk(self->mapLimit_))->maxLongitude_];
      [preferencesFacade putDoubleWithNSString:OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MIN withDouble:((OrgMapsforgeCoreModelBoundingBox *) nil_chk(self->mapLimit_))->minLongitude_];
    }
    [preferencesFacade putByteWithNSString:OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL withByte:self->zoomLevel_];
    [preferencesFacade putByteWithNSString:OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MAX withByte:self->zoomLevelMax_];
    [preferencesFacade putByteWithNSString:OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MIN withByte:self->zoomLevelMin_];
  }
}

- (void)setCenterWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong {
  @synchronized(self) {
    OrgMapsforgeMapModelMapViewPosition_setCenterInternalWithOrgMapsforgeCoreModelLatLong_(self, latLong);
  }
  [self notifyObservers];
}

- (void)setMapLimitWithOrgMapsforgeCoreModelBoundingBox:(OrgMapsforgeCoreModelBoundingBox *)mapLimit {
  @synchronized(self) {
    JreStrongAssign(&self->mapLimit_, mapLimit);
  }
  [self notifyObservers];
}

- (void)setMapPositionWithOrgMapsforgeCoreModelMapPosition:(OrgMapsforgeCoreModelMapPosition *)mapPosition {
  @synchronized(self) {
    OrgMapsforgeMapModelMapViewPosition_setCenterInternalWithOrgMapsforgeCoreModelLatLong_(self, ((OrgMapsforgeCoreModelMapPosition *) nil_chk(mapPosition))->latLong_);
    OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(self, mapPosition->zoomLevel_);
  }
  [self notifyObservers];
}

- (void)setPivotWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)pivot {
  @synchronized(self) {
    JreStrongAssign(&self->pivot_, pivot);
  }
}

- (void)setScaleFactorWithDouble:(jdouble)scaleFactor {
  @synchronized(self) {
    self->scaleFactor_ = scaleFactor;
  }
  [self notifyObservers];
}

- (void)setScaleFactorAdjustmentWithDouble:(jdouble)adjustment {
  @synchronized(self) {
    [self setScaleFactorWithDouble:JavaLangMath_powWithDouble_withDouble_(2, zoomLevel_) * adjustment];
  }
  [self notifyObservers];
}

- (void)setZoomLevelWithByte:(jbyte)zoomLevel {
  if (zoomLevel < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$B", @"zoomLevel must not be negative: ", zoomLevel));
  }
  @synchronized(self) {
    OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(self, zoomLevel);
  }
  [self notifyObservers];
}

- (void)setZoomLevelMaxWithByte:(jbyte)zoomLevelMax {
  if (zoomLevelMax < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$B", @"zoomLevelMax must not be negative: ", zoomLevelMax));
  }
  @synchronized(self) {
    if (zoomLevelMax < self->zoomLevelMin_) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$B", @"zoomLevelMax must be >= zoomLevelMin: ", zoomLevelMax));
    }
    self->zoomLevelMax_ = zoomLevelMax;
  }
  [self notifyObservers];
}

- (void)setZoomLevelMinWithByte:(jbyte)zoomLevelMin {
  if (zoomLevelMin < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$B", @"zoomLevelMin must not be negative: ", zoomLevelMin));
  }
  @synchronized(self) {
    if (zoomLevelMin > self->zoomLevelMax_) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$B", @"zoomLevelMin must be <= zoomLevelMax: ", zoomLevelMin));
    }
    self->zoomLevelMin_ = zoomLevelMin;
  }
  [self notifyObservers];
}

- (void)zoomWithByte:(jbyte)zoomLevelDiff {
  @synchronized(self) {
    OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(self, self->zoomLevel_ + zoomLevelDiff);
  }
  [self notifyObservers];
}

- (void)zoomIn {
  [self zoomWithByte:(jbyte) 1];
}

- (void)zoomOut {
  [self zoomWithByte:(jbyte) -1];
}

- (void)setCenterInternalWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong {
  OrgMapsforgeMapModelMapViewPosition_setCenterInternalWithOrgMapsforgeCoreModelLatLong_(self, latLong);
}

- (void)setZoomLevelInternalWithInt:(jint)zoomLevel {
  OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(self, zoomLevel);
}

- (void)dealloc {
  RELEASE_(displayModel_);
  RELEASE_(mapLimit_);
  RELEASE_(pivot_);
  RELEASE_(zoomAnimator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x8a, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelLatLong;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelBoundingBox;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelMapPosition;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelLatLong;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelPoint;", 0x21, 5, 6, -1, -1, -1, -1 },
    { NULL, "D", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 13, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 27, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 28, 29, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isNanWithDoubleArray:);
  methods[1].selector = @selector(initWithOrgMapsforgeMapModelDisplayModel:);
  methods[2].selector = @selector(animateToWithOrgMapsforgeCoreModelLatLong:);
  methods[3].selector = @selector(animationInProgress);
  methods[4].selector = @selector(destroy);
  methods[5].selector = @selector(getCenter);
  methods[6].selector = @selector(getMapLimit);
  methods[7].selector = @selector(getMapPosition);
  methods[8].selector = @selector(getPivot);
  methods[9].selector = @selector(getPivotXYWithByte:);
  methods[10].selector = @selector(getScaleFactor);
  methods[11].selector = @selector(getZoomLevel);
  methods[12].selector = @selector(getZoomLevelMax);
  methods[13].selector = @selector(getZoomLevelMin);
  methods[14].selector = @selector(init__WithOrgMapsforgeMapModelCommonPreferencesFacade:);
  methods[15].selector = @selector(moveCenterWithDouble:withDouble:);
  methods[16].selector = @selector(moveCenterAndZoomWithDouble:withDouble:withByte:);
  methods[17].selector = @selector(saveWithOrgMapsforgeMapModelCommonPreferencesFacade:);
  methods[18].selector = @selector(setCenterWithOrgMapsforgeCoreModelLatLong:);
  methods[19].selector = @selector(setMapLimitWithOrgMapsforgeCoreModelBoundingBox:);
  methods[20].selector = @selector(setMapPositionWithOrgMapsforgeCoreModelMapPosition:);
  methods[21].selector = @selector(setPivotWithOrgMapsforgeCoreModelLatLong:);
  methods[22].selector = @selector(setScaleFactorWithDouble:);
  methods[23].selector = @selector(setScaleFactorAdjustmentWithDouble:);
  methods[24].selector = @selector(setZoomLevelWithByte:);
  methods[25].selector = @selector(setZoomLevelMaxWithByte:);
  methods[26].selector = @selector(setZoomLevelMinWithByte:);
  methods[27].selector = @selector(zoomWithByte:);
  methods[28].selector = @selector(zoomIn);
  methods[29].selector = @selector(zoomOut);
  methods[30].selector = @selector(setCenterInternalWithOrgMapsforgeCoreModelLatLong:);
  methods[31].selector = @selector(setZoomLevelInternalWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LATITUDE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "LATITUDE_MAX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "LATITUDE_MIN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "LONGITUDE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "LONGITUDE_MAX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "LONGITUDE_MIN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "ZOOM_LEVEL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "ZOOM_LEVEL_MAX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "ZOOM_LEVEL_MIN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "displayModel_", "LOrgMapsforgeMapModelDisplayModel;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "latitude_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "longitude_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mapLimit_", "LOrgMapsforgeCoreModelBoundingBox;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pivot_", "LOrgMapsforgeCoreModelLatLong;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "scaleFactor_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zoomAnimator_", "LOrgMapsforgeMapModelMapViewPosition_ZoomAnimator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "zoomLevel_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zoomLevelMax_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "zoomLevelMin_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "isNan", "[D", "LOrgMapsforgeMapModelDisplayModel;", "animateTo", "LOrgMapsforgeCoreModelLatLong;", "getPivotXY", "B", "init", "LOrgMapsforgeMapModelCommonPreferencesFacade;", "moveCenter", "DD", "moveCenterAndZoom", "DDB", "save", "setCenter", "setMapLimit", "LOrgMapsforgeCoreModelBoundingBox;", "setMapPosition", "LOrgMapsforgeCoreModelMapPosition;", "setPivot", "setScaleFactor", "D", "setScaleFactorAdjustment", "setZoomLevel", "setZoomLevelMax", "setZoomLevelMin", "zoom", "setCenterInternal", "setZoomLevelInternal", "I", &OrgMapsforgeMapModelMapViewPosition_LATITUDE, &OrgMapsforgeMapModelMapViewPosition_LATITUDE_MAX, &OrgMapsforgeMapModelMapViewPosition_LATITUDE_MIN, &OrgMapsforgeMapModelMapViewPosition_LONGITUDE, &OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MAX, &OrgMapsforgeMapModelMapViewPosition_LONGITUDE_MIN, &OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL, &OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MAX, &OrgMapsforgeMapModelMapViewPosition_ZOOM_LEVEL_MIN, "LOrgMapsforgeMapModelMapViewPosition_ZoomAnimator;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapModelMapViewPosition = { "MapViewPosition", "org.mapsforge.map.model", ptrTable, methods, fields, 7, 0x1, 32, 19, -1, 39, -1, -1, -1 };
  return &_OrgMapsforgeMapModelMapViewPosition;
}

@end

jboolean OrgMapsforgeMapModelMapViewPosition_isNanWithDoubleArray_(IOSDoubleArray *values) {
  OrgMapsforgeMapModelMapViewPosition_initialize();
  {
    IOSDoubleArray *a__ = values;
    jdouble const *b__ = ((IOSDoubleArray *) nil_chk(a__))->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble value = *b__++;
      if (JavaLangDouble_isNaNWithDouble_(value)) {
        return true;
      }
    }
  }
  return false;
}

void OrgMapsforgeMapModelMapViewPosition_initWithOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapModelMapViewPosition *self, OrgMapsforgeMapModelDisplayModel *displayModel) {
  OrgMapsforgeMapModelCommonObservable_init(self);
  JreStrongAssign(&self->displayModel_, displayModel);
  self->zoomLevelMax_ = JavaLangByte_MAX_VALUE;
  JreStrongAssignAndConsume(&self->zoomAnimator_, new_OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_initWithOrgMapsforgeMapModelMapViewPosition_(self));
  [self->zoomAnimator_ start];
}

OrgMapsforgeMapModelMapViewPosition *new_OrgMapsforgeMapModelMapViewPosition_initWithOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapModelMapViewPosition, initWithOrgMapsforgeMapModelDisplayModel_, displayModel)
}

OrgMapsforgeMapModelMapViewPosition *create_OrgMapsforgeMapModelMapViewPosition_initWithOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapModelMapViewPosition, initWithOrgMapsforgeMapModelDisplayModel_, displayModel)
}

void OrgMapsforgeMapModelMapViewPosition_setCenterInternalWithOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition *self, OrgMapsforgeCoreModelLatLong *latLong) {
  if (self->mapLimit_ == nil) {
    self->latitude_ = ((OrgMapsforgeCoreModelLatLong *) nil_chk(latLong))->latitude_;
    self->longitude_ = latLong->longitude_;
  }
  else {
    self->latitude_ = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(((OrgMapsforgeCoreModelLatLong *) nil_chk(latLong))->latitude_, self->mapLimit_->maxLatitude_), ((OrgMapsforgeCoreModelBoundingBox *) nil_chk(self->mapLimit_))->minLatitude_);
    self->longitude_ = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(latLong->longitude_, ((OrgMapsforgeCoreModelBoundingBox *) nil_chk(self->mapLimit_))->maxLongitude_), ((OrgMapsforgeCoreModelBoundingBox *) nil_chk(self->mapLimit_))->minLongitude_);
  }
}

void OrgMapsforgeMapModelMapViewPosition_setZoomLevelInternalWithInt_(OrgMapsforgeMapModelMapViewPosition *self, jint zoomLevel) {
  self->zoomLevel_ = (jbyte) JavaLangMath_maxWithInt_withInt_(JavaLangMath_minWithInt_withInt_(zoomLevel, self->zoomLevelMax_), self->zoomLevelMin_);
  [((OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *) nil_chk(self->zoomAnimator_)) startAnimationWithDouble:[self getScaleFactor] withDouble:JavaLangMath_powWithDouble_withDouble_(2, self->zoomLevel_)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapModelMapViewPosition)

@implementation OrgMapsforgeMapModelMapViewPosition_ZoomAnimator

- (instancetype)initWithOrgMapsforgeMapModelMapViewPosition:(OrgMapsforgeMapModelMapViewPosition *)outer$ {
  OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_initWithOrgMapsforgeMapModelMapViewPosition_(self, outer$);
  return self;
}

- (void)doWork {
  if (JavaLangSystem_currentTimeMillis() >= self->timeEnd_) {
    self->executeAnimation_ = false;
    [this$0_ setScaleFactorWithDouble:OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_calculateScaleFactorWithFloat_(self, 1)];
    [this$0_ setPivotWithOrgMapsforgeCoreModelLatLong:nil];
  }
  else {
    jfloat timeElapsedRatio = (JavaLangSystem_currentTimeMillis() - self->timeStart_) / (1.0f * OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_DEFAULT_DURATION);
    [this$0_ setScaleFactorWithDouble:OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_calculateScaleFactorWithFloat_(self, timeElapsedRatio)];
  }
  JavaLangThread_sleepWithLong_(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_FRAME_LENGTH_IN_MS);
}

- (OrgMapsforgeMapUtilPausableThread_ThreadPriority *)getThreadPriority {
  return JreLoadEnum(OrgMapsforgeMapUtilPausableThread_ThreadPriority, ABOVE_NORMAL);
}

- (jboolean)hasWork {
  return self->executeAnimation_;
}

- (void)startAnimationWithDouble:(jdouble)startScaleFactor
                      withDouble:(jdouble)targetScaleFactor {
  self->startScaleFactor_ = startScaleFactor;
  self->scaleDifference_ = targetScaleFactor - self->startScaleFactor_;
  self->executeAnimation_ = true;
  self->timeStart_ = JavaLangSystem_currentTimeMillis();
  self->timeEnd_ = self->timeStart_ + OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_DEFAULT_DURATION;
  @synchronized(self) {
    [self java_notify];
  }
}

- (jdouble)calculateScaleFactorWithFloat:(jfloat)percent {
  return OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_calculateScaleFactorWithFloat_(self, percent);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "LOrgMapsforgeMapUtilPausableThread_ThreadPriority;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x2, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeMapModelMapViewPosition:);
  methods[1].selector = @selector(doWork);
  methods[2].selector = @selector(getThreadPriority);
  methods[3].selector = @selector(hasWork);
  methods[4].selector = @selector(startAnimationWithDouble:withDouble:);
  methods[5].selector = @selector(calculateScaleFactorWithFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgMapsforgeMapModelMapViewPosition;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "DEFAULT_DURATION", "I", .constantValue.asInt = OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_DEFAULT_DURATION, 0x1a, -1, -1, -1, -1 },
    { "FRAME_LENGTH_IN_MS", "I", .constantValue.asInt = OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_FRAME_LENGTH_IN_MS, 0x1a, -1, -1, -1, -1 },
    { "scaleDifference_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "startScaleFactor_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "executeAnimation_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "timeEnd_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "timeStart_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangInterruptedException;", "startAnimation", "DD", "calculateScaleFactor", "F", "LOrgMapsforgeMapModelMapViewPosition;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapModelMapViewPosition_ZoomAnimator = { "ZoomAnimator", "org.mapsforge.map.model", ptrTable, methods, fields, 7, 0x0, 6, 8, 5, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapModelMapViewPosition_ZoomAnimator;
}

@end

void OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_initWithOrgMapsforgeMapModelMapViewPosition_(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *self, OrgMapsforgeMapModelMapViewPosition *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgMapsforgeMapUtilPausableThread_init(self);
}

OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *new_OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_initWithOrgMapsforgeMapModelMapViewPosition_(OrgMapsforgeMapModelMapViewPosition *outer$) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator, initWithOrgMapsforgeMapModelMapViewPosition_, outer$)
}

OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *create_OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_initWithOrgMapsforgeMapModelMapViewPosition_(OrgMapsforgeMapModelMapViewPosition *outer$) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator, initWithOrgMapsforgeMapModelMapViewPosition_, outer$)
}

jdouble OrgMapsforgeMapModelMapViewPosition_ZoomAnimator_calculateScaleFactorWithFloat_(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator *self, jfloat percent) {
  return self->startScaleFactor_ + self->scaleDifference_ * percent;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapModelMapViewPosition_ZoomAnimator)

@implementation OrgMapsforgeMapModelMapViewPosition_1

- (instancetype)initWithOrgMapsforgeMapModelMapViewPosition:(OrgMapsforgeMapModelMapViewPosition *)outer$
                           withOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)capture$0 {
  OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(self, outer$, capture$0);
  return self;
}

- (void)run {
  jint totalSteps = 25;
  jint signX = 1;
  jint signY = 1;
  jlong mapSize = OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithByte_withInt_([this$0_ getZoomLevel], [((OrgMapsforgeMapModelDisplayModel *) nil_chk(this$0_->displayModel_)) getTileSize]);
  jdouble targetPixelX = OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithDouble_withLong_(((OrgMapsforgeCoreModelLatLong *) nil_chk(val$pos_))->longitude_, mapSize);
  jdouble targetPixelY = OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withLong_(val$pos_->latitude_, mapSize);
  jdouble currentPixelX = OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithDouble_withLong_(this$0_->longitude_, mapSize);
  jdouble currentPixelY = OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withLong_(this$0_->latitude_, mapSize);
  jdouble stepSizeX = JavaLangMath_absWithDouble_(targetPixelX - currentPixelX) / totalSteps;
  jdouble stepSizeY = JavaLangMath_absWithDouble_(targetPixelY - currentPixelY) / totalSteps;
  if (currentPixelX < targetPixelX) {
    signX = -1;
  }
  if (currentPixelY < targetPixelY) {
    signY = -1;
  }
  for (jint i = 0; i < totalSteps; i++) {
    [this$0_ moveCenterWithDouble:stepSizeX * signX withDouble:stepSizeY * signY];
    @try {
      JavaLangThread_sleepWithLong_(10);
    }
    @catch (JavaLangInterruptedException *e) {
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$pos_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeMapModelMapViewPosition:withOrgMapsforgeCoreModelLatLong:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgMapsforgeMapModelMapViewPosition;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$pos_", "LOrgMapsforgeCoreModelLatLong;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeMapModelMapViewPosition;", "animateToWithOrgMapsforgeCoreModelLatLong:" };
  static const J2ObjcClassInfo _OrgMapsforgeMapModelMapViewPosition_1 = { "", "org.mapsforge.map.model", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
  return &_OrgMapsforgeMapModelMapViewPosition_1;
}

@end

void OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition_1 *self, OrgMapsforgeMapModelMapViewPosition *outer$, OrgMapsforgeCoreModelLatLong *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$pos_, capture$0);
  NSObject_init(self);
}

OrgMapsforgeMapModelMapViewPosition_1 *new_OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition *outer$, OrgMapsforgeCoreModelLatLong *capture$0) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapModelMapViewPosition_1, initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_, outer$, capture$0)
}

OrgMapsforgeMapModelMapViewPosition_1 *create_OrgMapsforgeMapModelMapViewPosition_1_initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_(OrgMapsforgeMapModelMapViewPosition *outer$, OrgMapsforgeCoreModelLatLong *capture$0) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapModelMapViewPosition_1, initWithOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreModelLatLong_, outer$, capture$0)
}
