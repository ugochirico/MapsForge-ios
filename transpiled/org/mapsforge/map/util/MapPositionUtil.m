//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/util/MapPositionUtil.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "org/mapsforge/core/model/BoundingBox.h"
#include "org/mapsforge/core/model/Dimension.h"
#include "org/mapsforge/core/model/LatLong.h"
#include "org/mapsforge/core/model/MapPosition.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/core/util/MercatorProjection.h"
#include "org/mapsforge/map/util/MapPositionUtil.h"

@interface OrgMapsforgeMapUtilMapPositionUtil ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgMapsforgeMapUtilMapPositionUtil_init(OrgMapsforgeMapUtilMapPositionUtil *self);

__attribute__((unused)) static OrgMapsforgeMapUtilMapPositionUtil *new_OrgMapsforgeMapUtilMapPositionUtil_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapUtilMapPositionUtil *create_OrgMapsforgeMapUtilMapPositionUtil_init();

@implementation OrgMapsforgeMapUtilMapPositionUtil

+ (OrgMapsforgeCoreModelBoundingBox *)getBoundingBoxWithOrgMapsforgeCoreModelMapPosition:(OrgMapsforgeCoreModelMapPosition *)mapPosition
                                                      withOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)canvasDimension
                                                                                 withInt:(jint)tileSize {
  return OrgMapsforgeMapUtilMapPositionUtil_getBoundingBoxWithOrgMapsforgeCoreModelMapPosition_withOrgMapsforgeCoreModelDimension_withInt_(mapPosition, canvasDimension, tileSize);
}

+ (OrgMapsforgeCoreModelPoint *)getTopLeftPointWithOrgMapsforgeCoreModelMapPosition:(OrgMapsforgeCoreModelMapPosition *)mapPosition
                                                 withOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)canvasDimension
                                                                            withInt:(jint)tileSize {
  return OrgMapsforgeMapUtilMapPositionUtil_getTopLeftPointWithOrgMapsforgeCoreModelMapPosition_withOrgMapsforgeCoreModelDimension_withInt_(mapPosition, canvasDimension, tileSize);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMapsforgeMapUtilMapPositionUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeCoreModelBoundingBox;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelPoint;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getBoundingBoxWithOrgMapsforgeCoreModelMapPosition:withOrgMapsforgeCoreModelDimension:withInt:);
  methods[1].selector = @selector(getTopLeftPointWithOrgMapsforgeCoreModelMapPosition:withOrgMapsforgeCoreModelDimension:withInt:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getBoundingBox", "LOrgMapsforgeCoreModelMapPosition;LOrgMapsforgeCoreModelDimension;I", "getTopLeftPoint" };
  static const J2ObjcClassInfo _OrgMapsforgeMapUtilMapPositionUtil = { "MapPositionUtil", "org.mapsforge.map.util", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapUtilMapPositionUtil;
}

@end

OrgMapsforgeCoreModelBoundingBox *OrgMapsforgeMapUtilMapPositionUtil_getBoundingBoxWithOrgMapsforgeCoreModelMapPosition_withOrgMapsforgeCoreModelDimension_withInt_(OrgMapsforgeCoreModelMapPosition *mapPosition, OrgMapsforgeCoreModelDimension *canvasDimension, jint tileSize) {
  OrgMapsforgeMapUtilMapPositionUtil_initialize();
  jlong mapSize = OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithByte_withInt_(((OrgMapsforgeCoreModelMapPosition *) nil_chk(mapPosition))->zoomLevel_, tileSize);
  jdouble pixelX = OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithDouble_withLong_(((OrgMapsforgeCoreModelLatLong *) nil_chk(mapPosition->latLong_))->longitude_, mapSize);
  jdouble pixelY = OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withLong_(mapPosition->latLong_->latitude_, mapSize);
  jint halfCanvasWidth = ((OrgMapsforgeCoreModelDimension *) nil_chk(canvasDimension))->width_ / 2;
  jint halfCanvasHeight = canvasDimension->height_ / 2;
  jdouble pixelXMin = JavaLangMath_maxWithDouble_withDouble_(0, pixelX - halfCanvasWidth);
  jdouble pixelYMin = JavaLangMath_maxWithDouble_withDouble_(0, pixelY - halfCanvasHeight);
  jdouble pixelXMax = JavaLangMath_minWithDouble_withDouble_(mapSize, pixelX + halfCanvasWidth);
  jdouble pixelYMax = JavaLangMath_minWithDouble_withDouble_(mapSize, pixelY + halfCanvasHeight);
  jdouble minLatitude = OrgMapsforgeCoreUtilMercatorProjection_pixelYToLatitudeWithDouble_withLong_(pixelYMax, mapSize);
  jdouble minLongitude = OrgMapsforgeCoreUtilMercatorProjection_pixelXToLongitudeWithDouble_withLong_(pixelXMin, mapSize);
  jdouble maxLatitude = OrgMapsforgeCoreUtilMercatorProjection_pixelYToLatitudeWithDouble_withLong_(pixelYMin, mapSize);
  jdouble maxLongitude = OrgMapsforgeCoreUtilMercatorProjection_pixelXToLongitudeWithDouble_withLong_(pixelXMax, mapSize);
  return create_OrgMapsforgeCoreModelBoundingBox_initWithDouble_withDouble_withDouble_withDouble_(minLatitude, minLongitude, maxLatitude, maxLongitude);
}

OrgMapsforgeCoreModelPoint *OrgMapsforgeMapUtilMapPositionUtil_getTopLeftPointWithOrgMapsforgeCoreModelMapPosition_withOrgMapsforgeCoreModelDimension_withInt_(OrgMapsforgeCoreModelMapPosition *mapPosition, OrgMapsforgeCoreModelDimension *canvasDimension, jint tileSize) {
  OrgMapsforgeMapUtilMapPositionUtil_initialize();
  OrgMapsforgeCoreModelLatLong *centerPoint = ((OrgMapsforgeCoreModelMapPosition *) nil_chk(mapPosition))->latLong_;
  jint halfCanvasWidth = ((OrgMapsforgeCoreModelDimension *) nil_chk(canvasDimension))->width_ / 2;
  jint halfCanvasHeight = canvasDimension->height_ / 2;
  jlong mapSize = OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithByte_withInt_(mapPosition->zoomLevel_, tileSize);
  jdouble pixelX = JavaLangMath_roundWithDouble_(OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithDouble_withLong_(((OrgMapsforgeCoreModelLatLong *) nil_chk(centerPoint))->longitude_, mapSize));
  jdouble pixelY = JavaLangMath_roundWithDouble_(OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withLong_(centerPoint->latitude_, mapSize));
  return create_OrgMapsforgeCoreModelPoint_initWithDouble_withDouble_(JreFpToInt(pixelX) - halfCanvasWidth, JreFpToInt(pixelY) - halfCanvasHeight);
}

void OrgMapsforgeMapUtilMapPositionUtil_init(OrgMapsforgeMapUtilMapPositionUtil *self) {
  NSObject_init(self);
  @throw create_JavaLangIllegalStateException_init();
}

OrgMapsforgeMapUtilMapPositionUtil *new_OrgMapsforgeMapUtilMapPositionUtil_init() {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapUtilMapPositionUtil, init)
}

OrgMapsforgeMapUtilMapPositionUtil *create_OrgMapsforgeMapUtilMapPositionUtil_init() {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapUtilMapPositionUtil, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapUtilMapPositionUtil)
