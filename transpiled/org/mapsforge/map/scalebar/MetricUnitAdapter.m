//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/scalebar/MetricUnitAdapter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/mapsforge/map/scalebar/MetricUnitAdapter.h"

@interface OrgMapsforgeMapScalebarMetricUnitAdapter ()

- (instancetype)init;

@end

inline jint OrgMapsforgeMapScalebarMetricUnitAdapter_get_ONE_KILOMETER();
#define OrgMapsforgeMapScalebarMetricUnitAdapter_ONE_KILOMETER 1000
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeMapScalebarMetricUnitAdapter, ONE_KILOMETER, jint)

inline IOSIntArray *OrgMapsforgeMapScalebarMetricUnitAdapter_get_SCALE_BAR_VALUES();
static IOSIntArray *OrgMapsforgeMapScalebarMetricUnitAdapter_SCALE_BAR_VALUES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapScalebarMetricUnitAdapter, SCALE_BAR_VALUES, IOSIntArray *)

__attribute__((unused)) static void OrgMapsforgeMapScalebarMetricUnitAdapter_init(OrgMapsforgeMapScalebarMetricUnitAdapter *self);

__attribute__((unused)) static OrgMapsforgeMapScalebarMetricUnitAdapter *new_OrgMapsforgeMapScalebarMetricUnitAdapter_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapScalebarMetricUnitAdapter *create_OrgMapsforgeMapScalebarMetricUnitAdapter_init();

J2OBJC_INITIALIZED_DEFN(OrgMapsforgeMapScalebarMetricUnitAdapter)

OrgMapsforgeMapScalebarMetricUnitAdapter *OrgMapsforgeMapScalebarMetricUnitAdapter_INSTANCE;

@implementation OrgMapsforgeMapScalebarMetricUnitAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMapsforgeMapScalebarMetricUnitAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jdouble)getMeterRatio {
  return 1;
}

- (IOSIntArray *)getScaleBarValues {
  return OrgMapsforgeMapScalebarMetricUnitAdapter_SCALE_BAR_VALUES;
}

- (NSString *)getScaleTextWithInt:(jint)mapScaleValue {
  if (mapScaleValue < OrgMapsforgeMapScalebarMetricUnitAdapter_ONE_KILOMETER) {
    return JreStrcat("I$", mapScaleValue, @" m");
  }
  return JreStrcat("I$", (mapScaleValue / OrgMapsforgeMapScalebarMetricUnitAdapter_ONE_KILOMETER), @" km");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMeterRatio);
  methods[2].selector = @selector(getScaleBarValues);
  methods[3].selector = @selector(getScaleTextWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgMapsforgeMapScalebarMetricUnitAdapter;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "ONE_KILOMETER", "I", .constantValue.asInt = OrgMapsforgeMapScalebarMetricUnitAdapter_ONE_KILOMETER, 0x1a, -1, -1, -1, -1 },
    { "SCALE_BAR_VALUES", "[I", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "getScaleText", "I", &OrgMapsforgeMapScalebarMetricUnitAdapter_INSTANCE, &OrgMapsforgeMapScalebarMetricUnitAdapter_SCALE_BAR_VALUES };
  static const J2ObjcClassInfo _OrgMapsforgeMapScalebarMetricUnitAdapter = { "MetricUnitAdapter", "org.mapsforge.map.scalebar", ptrTable, methods, fields, 7, 0x11, 4, 3, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapScalebarMetricUnitAdapter;
}

+ (void)initialize {
  if (self == [OrgMapsforgeMapScalebarMetricUnitAdapter class]) {
    JreStrongAssignAndConsume(&OrgMapsforgeMapScalebarMetricUnitAdapter_INSTANCE, new_OrgMapsforgeMapScalebarMetricUnitAdapter_init());
    JreStrongAssignAndConsume(&OrgMapsforgeMapScalebarMetricUnitAdapter_SCALE_BAR_VALUES, [IOSIntArray newArrayWithInts:(jint[]){ 10000000, 5000000, 2000000, 1000000, 500000, 200000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 200, 100, 50, 20, 10, 5, 2, 1 } count:22]);
    J2OBJC_SET_INITIALIZED(OrgMapsforgeMapScalebarMetricUnitAdapter)
  }
}

@end

void OrgMapsforgeMapScalebarMetricUnitAdapter_init(OrgMapsforgeMapScalebarMetricUnitAdapter *self) {
  NSObject_init(self);
}

OrgMapsforgeMapScalebarMetricUnitAdapter *new_OrgMapsforgeMapScalebarMetricUnitAdapter_init() {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapScalebarMetricUnitAdapter, init)
}

OrgMapsforgeMapScalebarMetricUnitAdapter *create_OrgMapsforgeMapScalebarMetricUnitAdapter_init() {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapScalebarMetricUnitAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapScalebarMetricUnitAdapter)
