//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/reader/MapReadResultBuilder.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/mapsforge/map/reader/MapReadResult.h"
#include "org/mapsforge/map/reader/MapReadResultBuilder.h"
#include "org/mapsforge/map/reader/PoiWayBundle.h"

@implementation OrgMapsforgeMapReaderMapReadResultBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgMapsforgeMapReaderMapReadResultBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithOrgMapsforgeMapReaderPoiWayBundle:(OrgMapsforgeMapReaderPoiWayBundle *)poiWayBundle {
  [((id<JavaUtilList>) nil_chk(self->pointOfInterests_)) addAllWithJavaUtilCollection:((OrgMapsforgeMapReaderPoiWayBundle *) nil_chk(poiWayBundle))->pois_];
  [((id<JavaUtilList>) nil_chk(self->ways_)) addAllWithJavaUtilCollection:poiWayBundle->ways_];
}

- (OrgMapsforgeMapReaderMapReadResult *)build {
  return create_OrgMapsforgeMapReaderMapReadResult_initWithOrgMapsforgeMapReaderMapReadResultBuilder_(self);
}

- (void)dealloc {
  RELEASE_(pointOfInterests_);
  RELEASE_(ways_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeMapReaderMapReadResult;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithOrgMapsforgeMapReaderPoiWayBundle:);
  methods[2].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "isWater_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "pointOfInterests_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 2, -1 },
    { "ways_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "add", "LOrgMapsforgeMapReaderPoiWayBundle;", "Ljava/util/List<Lorg/mapsforge/map/reader/PointOfInterest;>;", "Ljava/util/List<Lorg/mapsforge/map/reader/Way;>;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapReaderMapReadResultBuilder = { "MapReadResultBuilder", "org.mapsforge.map.reader", ptrTable, methods, fields, 7, 0x0, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapReaderMapReadResultBuilder;
}

@end

void OrgMapsforgeMapReaderMapReadResultBuilder_init(OrgMapsforgeMapReaderMapReadResultBuilder *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->pointOfInterests_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->ways_, new_JavaUtilArrayList_init());
}

OrgMapsforgeMapReaderMapReadResultBuilder *new_OrgMapsforgeMapReaderMapReadResultBuilder_init() {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapReaderMapReadResultBuilder, init)
}

OrgMapsforgeMapReaderMapReadResultBuilder *create_OrgMapsforgeMapReaderMapReadResultBuilder_init() {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapReaderMapReadResultBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapReaderMapReadResultBuilder)
