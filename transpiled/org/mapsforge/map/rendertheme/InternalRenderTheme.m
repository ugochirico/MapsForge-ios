//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/InternalRenderTheme.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/mapsforge/map/rendertheme/InternalRenderTheme.h"
#include "org/mapsforge/map/rendertheme/XmlRenderThemeMenuCallback.h"

@interface OrgMapsforgeMapRenderthemeInternalRenderTheme () {
 @public
  NSString *absolutePath_;
  NSString *file_;
}

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeInternalRenderTheme, absolutePath_, NSString *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeInternalRenderTheme, file_, NSString *)

__attribute__((unused)) static void OrgMapsforgeMapRenderthemeInternalRenderTheme_initWithNSString_withNSString_withNSString_withInt_(OrgMapsforgeMapRenderthemeInternalRenderTheme *self, NSString *absolutePath, NSString *file, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgMapsforgeMapRenderthemeInternalRenderTheme)

OrgMapsforgeMapRenderthemeInternalRenderTheme *OrgMapsforgeMapRenderthemeInternalRenderTheme_values_[1];

@implementation OrgMapsforgeMapRenderthemeInternalRenderTheme

- (id<OrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback>)getMenuCallback {
  return nil;
}

- (NSString *)getRelativePathPrefix {
  return self->absolutePath_;
}

- (JavaIoInputStream *)getRenderThemeAsStream {
  return [[self java_getClass] getResourceAsStream:JreStrcat("$$", self->absolutePath_, self->file_)];
}

+ (IOSObjectArray *)values {
  return OrgMapsforgeMapRenderthemeInternalRenderTheme_values();
}

+ (OrgMapsforgeMapRenderthemeInternalRenderTheme *)valueOfWithNSString:(NSString *)name {
  return OrgMapsforgeMapRenderthemeInternalRenderTheme_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeMapRenderthemeXmlRenderThemeMenuCallback;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgMapsforgeMapRenderthemeInternalRenderTheme;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeMapRenderthemeInternalRenderTheme;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getMenuCallback);
  methods[1].selector = @selector(getRelativePathPrefix);
  methods[2].selector = @selector(getRenderThemeAsStream);
  methods[3].selector = @selector(values);
  methods[4].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OSMARENDER", "LOrgMapsforgeMapRenderthemeInternalRenderTheme;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "absolutePath_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "file_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgMapsforgeMapRenderthemeInternalRenderTheme, OSMARENDER), "Ljava/lang/Enum<Lorg/mapsforge/map/rendertheme/InternalRenderTheme;>;Lorg/mapsforge/map/rendertheme/XmlRenderTheme;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapRenderthemeInternalRenderTheme = { "InternalRenderTheme", "org.mapsforge.map.rendertheme", ptrTable, methods, fields, 7, 0x4011, 5, 3, -1, -1, -1, 3, -1 };
  return &_OrgMapsforgeMapRenderthemeInternalRenderTheme;
}

+ (void)initialize {
  if (self == [OrgMapsforgeMapRenderthemeInternalRenderTheme class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgMapsforgeMapRenderthemeInternalRenderTheme, OSMARENDER) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgMapsforgeMapRenderthemeInternalRenderTheme_initWithNSString_withNSString_withNSString_withInt_(e, @"/osmarender/", @"osmarender.xml", @"OSMARENDER", 0);
    J2OBJC_SET_INITIALIZED(OrgMapsforgeMapRenderthemeInternalRenderTheme)
  }
}

@end

void OrgMapsforgeMapRenderthemeInternalRenderTheme_initWithNSString_withNSString_withNSString_withInt_(OrgMapsforgeMapRenderthemeInternalRenderTheme *self, NSString *absolutePath, NSString *file, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->absolutePath_, absolutePath);
  JreStrongAssign(&self->file_, file);
}

IOSObjectArray *OrgMapsforgeMapRenderthemeInternalRenderTheme_values() {
  OrgMapsforgeMapRenderthemeInternalRenderTheme_initialize();
  return [IOSObjectArray arrayWithObjects:OrgMapsforgeMapRenderthemeInternalRenderTheme_values_ count:1 type:OrgMapsforgeMapRenderthemeInternalRenderTheme_class_()];
}

OrgMapsforgeMapRenderthemeInternalRenderTheme *OrgMapsforgeMapRenderthemeInternalRenderTheme_valueOfWithNSString_(NSString *name) {
  OrgMapsforgeMapRenderthemeInternalRenderTheme_initialize();
  for (int i = 0; i < 1; i++) {
    OrgMapsforgeMapRenderthemeInternalRenderTheme *e = OrgMapsforgeMapRenderthemeInternalRenderTheme_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgMapsforgeMapRenderthemeInternalRenderTheme *OrgMapsforgeMapRenderthemeInternalRenderTheme_fromOrdinal(NSUInteger ordinal) {
  OrgMapsforgeMapRenderthemeInternalRenderTheme_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return OrgMapsforgeMapRenderthemeInternalRenderTheme_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapRenderthemeInternalRenderTheme)
