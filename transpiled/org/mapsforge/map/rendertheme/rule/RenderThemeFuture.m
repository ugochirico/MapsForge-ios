//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/rule/RenderThemeFuture.java
//

#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/FutureTask.h"
#include "org/mapsforge/core/graphics/GraphicFactory.h"
#include "org/mapsforge/map/model/DisplayModel.h"
#include "org/mapsforge/map/rendertheme/XmlRenderTheme.h"
#include "org/mapsforge/map/rendertheme/rule/RenderTheme.h"
#include "org/mapsforge/map/rendertheme/rule/RenderThemeFuture.h"
#include "org/mapsforge/map/rendertheme/rule/RenderThemeHandler.h"
#include "org/xmlpull/v1/XmlPullParserException.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable : NSObject < JavaUtilConcurrentCallable > {
 @public
  id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory_;
  id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme_;
  OrgMapsforgeMapModelDisplayModel *displayModel_;
}

- (instancetype)initWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                  withOrgMapsforgeMapRenderthemeXmlRenderTheme:(id<OrgMapsforgeMapRenderthemeXmlRenderTheme>)xmlRenderTheme
                          withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel;

- (OrgMapsforgeMapRenderthemeRuleRenderTheme *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable)

J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable, graphicFactory_, id<OrgMapsforgeCoreGraphicsGraphicFactory>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable, xmlRenderTheme_, id<OrgMapsforgeMapRenderthemeXmlRenderTheme>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable, displayModel_, OrgMapsforgeMapModelDisplayModel *)

__attribute__((unused)) static void OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable *self, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel);

__attribute__((unused)) static OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable *new_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable *create_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable)

@implementation OrgMapsforgeMapRenderthemeRuleRenderThemeFuture

- (instancetype)initWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                  withOrgMapsforgeMapRenderthemeXmlRenderTheme:(id<OrgMapsforgeMapRenderthemeXmlRenderTheme>)xmlRenderTheme
                          withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel {
  OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(self, graphicFactory, xmlRenderTheme, displayModel);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreGraphicsGraphicFactory:withOrgMapsforgeMapRenderthemeXmlRenderTheme:withOrgMapsforgeMapModelDisplayModel:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgMapsforgeCoreGraphicsGraphicFactory;LOrgMapsforgeMapRenderthemeXmlRenderTheme;LOrgMapsforgeMapModelDisplayModel;", "LOrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable;", "Ljava/util/concurrent/FutureTask<Lorg/mapsforge/map/rendertheme/rule/RenderTheme;>;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapRenderthemeRuleRenderThemeFuture = { "RenderThemeFuture", "org.mapsforge.map.rendertheme.rule", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 1, -1, 2, -1 };
  return &_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture;
}

@end

void OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture *self, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) {
  JavaUtilConcurrentFutureTask_initWithJavaUtilConcurrentCallable_(self, create_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(graphicFactory, xmlRenderTheme, displayModel));
}

OrgMapsforgeMapRenderthemeRuleRenderThemeFuture *new_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_, graphicFactory, xmlRenderTheme, displayModel)
}

OrgMapsforgeMapRenderthemeRuleRenderThemeFuture *create_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_, graphicFactory, xmlRenderTheme, displayModel)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture)

@implementation OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable

- (instancetype)initWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                  withOrgMapsforgeMapRenderthemeXmlRenderTheme:(id<OrgMapsforgeMapRenderthemeXmlRenderTheme>)xmlRenderTheme
                          withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel {
  OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(self, graphicFactory, xmlRenderTheme, displayModel);
  return self;
}

- (OrgMapsforgeMapRenderthemeRuleRenderTheme *)call {
  if (xmlRenderTheme_ == nil || self->displayModel_ == nil) {
    return nil;
  }
  @try {
    return OrgMapsforgeMapRenderthemeRuleRenderThemeHandler_getRenderThemeWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeMapRenderthemeXmlRenderTheme_(self->graphicFactory_, displayModel_, self->xmlRenderTheme_);
  }
  @catch (OrgXmlpullV1XmlPullParserException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_withNSException_(@"Parse error for XML rendertheme", e);
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_withNSException_(@"File error for XML rendertheme", e);
  }
}

- (void)dealloc {
  RELEASE_(graphicFactory_);
  RELEASE_(xmlRenderTheme_);
  RELEASE_(displayModel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeMapRenderthemeRuleRenderTheme;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreGraphicsGraphicFactory:withOrgMapsforgeMapRenderthemeXmlRenderTheme:withOrgMapsforgeMapModelDisplayModel:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "graphicFactory_", "LOrgMapsforgeCoreGraphicsGraphicFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "xmlRenderTheme_", "LOrgMapsforgeMapRenderthemeXmlRenderTheme;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "displayModel_", "LOrgMapsforgeMapModelDisplayModel;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeCoreGraphicsGraphicFactory;LOrgMapsforgeMapRenderthemeXmlRenderTheme;LOrgMapsforgeMapModelDisplayModel;", "LOrgMapsforgeMapRenderthemeRuleRenderThemeFuture;", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lorg/mapsforge/map/rendertheme/rule/RenderTheme;>;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable = { "RenderThemeCallable", "org.mapsforge.map.rendertheme.rule", ptrTable, methods, fields, 7, 0xa, 2, 3, 1, -1, -1, 2, -1 };
  return &_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable;
}

@end

void OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable *self, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) {
  NSObject_init(self);
  JreStrongAssign(&self->graphicFactory_, graphicFactory);
  JreStrongAssign(&self->xmlRenderTheme_, xmlRenderTheme);
  JreStrongAssign(&self->displayModel_, displayModel);
}

OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable *new_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_, graphicFactory, xmlRenderTheme, displayModel)
}

OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable *create_OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapRenderthemeXmlRenderTheme> xmlRenderTheme, OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapRenderthemeXmlRenderTheme_withOrgMapsforgeMapModelDisplayModel_, graphicFactory, xmlRenderTheme, displayModel)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapRenderthemeRuleRenderThemeFuture_RenderThemeCallable)
