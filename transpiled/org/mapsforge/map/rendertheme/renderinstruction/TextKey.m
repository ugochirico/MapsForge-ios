//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/renderinstruction/TextKey.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/List.h"
#include "org/mapsforge/core/model/Tag.h"
#include "org/mapsforge/map/rendertheme/renderinstruction/TextKey.h"

@interface OrgMapsforgeMapRenderthemeRenderinstructionTextKey () {
 @public
  NSString *key_;
}

- (instancetype)initWithNSString:(NSString *)key;

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, key_, NSString *)

inline NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_KEY_ELEVATION();
static NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_ELEVATION = @"ele";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, KEY_ELEVATION, NSString *)

inline NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_KEY_HOUSENUMBER();
static NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_HOUSENUMBER = @"addr:housenumber";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, KEY_HOUSENUMBER, NSString *)

inline NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_KEY_NAME();
static NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_NAME = @"name";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, KEY_NAME, NSString *)

inline NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_KEY_REF();
static NSString *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_REF = @"ref";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, KEY_REF, NSString *)

inline OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_TEXT_KEY_ELEVATION();
static OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_ELEVATION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, TEXT_KEY_ELEVATION, OrgMapsforgeMapRenderthemeRenderinstructionTextKey *)

inline OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_TEXT_KEY_HOUSENUMBER();
static OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_HOUSENUMBER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, TEXT_KEY_HOUSENUMBER, OrgMapsforgeMapRenderthemeRenderinstructionTextKey *)

inline OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_TEXT_KEY_NAME();
static OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, TEXT_KEY_NAME, OrgMapsforgeMapRenderthemeRenderinstructionTextKey *)

inline OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_get_TEXT_KEY_REF();
static OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_REF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, TEXT_KEY_REF, OrgMapsforgeMapRenderthemeRenderinstructionTextKey *)

__attribute__((unused)) static void OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(OrgMapsforgeMapRenderthemeRenderinstructionTextKey *self, NSString *key);

__attribute__((unused)) static OrgMapsforgeMapRenderthemeRenderinstructionTextKey *new_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapRenderthemeRenderinstructionTextKey *create_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(NSString *key);

J2OBJC_INITIALIZED_DEFN(OrgMapsforgeMapRenderthemeRenderinstructionTextKey)

@implementation OrgMapsforgeMapRenderthemeRenderinstructionTextKey

+ (OrgMapsforgeMapRenderthemeRenderinstructionTextKey *)getInstanceWithNSString:(NSString *)key {
  return OrgMapsforgeMapRenderthemeRenderinstructionTextKey_getInstanceWithNSString_(key);
}

- (instancetype)initWithNSString:(NSString *)key {
  OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(self, key);
  return self;
}

- (NSString *)getValueWithJavaUtilList:(id<JavaUtilList>)tags {
  for (jint i = 0, n = [((id<JavaUtilList>) nil_chk(tags)) size]; i < n; ++i) {
    if ([((NSString *) nil_chk(self->key_)) isEqual:((OrgMapsforgeCoreModelTag *) nil_chk([tags getWithInt:i]))->key_]) {
      return ((OrgMapsforgeCoreModelTag *) nil_chk([tags getWithInt:i]))->value_;
    }
  }
  return nil;
}

- (void)dealloc {
  RELEASE_(key_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeMapRenderthemeRenderinstructionTextKey;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getInstanceWithNSString:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(getValueWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "KEY_ELEVATION", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "KEY_HOUSENUMBER", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "KEY_NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "KEY_REF", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "TEXT_KEY_ELEVATION", "LOrgMapsforgeMapRenderthemeRenderinstructionTextKey;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "TEXT_KEY_HOUSENUMBER", "LOrgMapsforgeMapRenderthemeRenderinstructionTextKey;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "TEXT_KEY_NAME", "LOrgMapsforgeMapRenderthemeRenderinstructionTextKey;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "TEXT_KEY_REF", "LOrgMapsforgeMapRenderthemeRenderinstructionTextKey;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSString;", "getValue", "LJavaUtilList;", "(Ljava/util/List<Lorg/mapsforge/core/model/Tag;>;)Ljava/lang/String;", &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_ELEVATION, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_HOUSENUMBER, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_NAME, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_REF, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_ELEVATION, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_HOUSENUMBER, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_NAME, &OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_REF };
  static const J2ObjcClassInfo _OrgMapsforgeMapRenderthemeRenderinstructionTextKey = { "TextKey", "org.mapsforge.map.rendertheme.renderinstruction", ptrTable, methods, fields, 7, 0x10, 3, 9, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapRenderthemeRenderinstructionTextKey;
}

+ (void)initialize {
  if (self == [OrgMapsforgeMapRenderthemeRenderinstructionTextKey class]) {
    JreStrongAssignAndConsume(&OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_ELEVATION, new_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_ELEVATION));
    JreStrongAssignAndConsume(&OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_HOUSENUMBER, new_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_HOUSENUMBER));
    JreStrongAssignAndConsume(&OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_NAME, new_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_NAME));
    JreStrongAssignAndConsume(&OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_REF, new_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_REF));
    J2OBJC_SET_INITIALIZED(OrgMapsforgeMapRenderthemeRenderinstructionTextKey)
  }
}

@end

OrgMapsforgeMapRenderthemeRenderinstructionTextKey *OrgMapsforgeMapRenderthemeRenderinstructionTextKey_getInstanceWithNSString_(NSString *key) {
  OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initialize();
  if ([((NSString *) nil_chk(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_ELEVATION)) isEqual:key]) {
    return OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_ELEVATION;
  }
  else if ([((NSString *) nil_chk(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_HOUSENUMBER)) isEqual:key]) {
    return OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_HOUSENUMBER;
  }
  else if ([((NSString *) nil_chk(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_NAME)) isEqual:key]) {
    return OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_NAME;
  }
  else if ([((NSString *) nil_chk(OrgMapsforgeMapRenderthemeRenderinstructionTextKey_KEY_REF)) isEqual:key]) {
    return OrgMapsforgeMapRenderthemeRenderinstructionTextKey_TEXT_KEY_REF;
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid key: ", key));
  }
}

void OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(OrgMapsforgeMapRenderthemeRenderinstructionTextKey *self, NSString *key) {
  NSObject_init(self);
  JreStrongAssign(&self->key_, key);
}

OrgMapsforgeMapRenderthemeRenderinstructionTextKey *new_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(NSString *key) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, initWithNSString_, key)
}

OrgMapsforgeMapRenderthemeRenderinstructionTextKey *create_OrgMapsforgeMapRenderthemeRenderinstructionTextKey_initWithNSString_(NSString *key) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapRenderthemeRenderinstructionTextKey, initWithNSString_, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapRenderthemeRenderinstructionTextKey)
