//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/debug/TileGridLayer.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/core/graphics/Canvas.h"
#include "org/mapsforge/core/graphics/Color.h"
#include "org/mapsforge/core/graphics/GraphicFactory.h"
#include "org/mapsforge/core/graphics/Paint.h"
#include "org/mapsforge/core/graphics/Style.h"
#include "org/mapsforge/core/model/BoundingBox.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/core/util/MercatorProjection.h"
#include "org/mapsforge/map/layer/Layer.h"
#include "org/mapsforge/map/layer/debug/TileGridLayer.h"
#include "org/mapsforge/map/model/DisplayModel.h"

@interface OrgMapsforgeMapLayerDebugTileGridLayer () {
 @public
  OrgMapsforgeMapModelDisplayModel *displayModel_TileGridLayer_;
  id<OrgMapsforgeCoreGraphicsPaint> paintFront_;
  id<OrgMapsforgeCoreGraphicsPaint> paintBack_;
}

+ (id<OrgMapsforgeCoreGraphicsPaint>)createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                                                           withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel;

+ (id<OrgMapsforgeCoreGraphicsPaint>)createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                                                          withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel;

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerDebugTileGridLayer, displayModel_TileGridLayer_, OrgMapsforgeMapModelDisplayModel *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerDebugTileGridLayer, paintFront_, id<OrgMapsforgeCoreGraphicsPaint>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerDebugTileGridLayer, paintBack_, id<OrgMapsforgeCoreGraphicsPaint>)

__attribute__((unused)) static id<OrgMapsforgeCoreGraphicsPaint> OrgMapsforgeMapLayerDebugTileGridLayer_createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel);

__attribute__((unused)) static id<OrgMapsforgeCoreGraphicsPaint> OrgMapsforgeMapLayerDebugTileGridLayer_createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel);

@implementation OrgMapsforgeMapLayerDebugTileGridLayer

+ (id<OrgMapsforgeCoreGraphicsPaint>)createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                                                           withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel {
  return OrgMapsforgeMapLayerDebugTileGridLayer_createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(graphicFactory, displayModel);
}

+ (id<OrgMapsforgeCoreGraphicsPaint>)createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                                                          withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel {
  return OrgMapsforgeMapLayerDebugTileGridLayer_createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(graphicFactory, displayModel);
}

- (instancetype)initWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                          withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel {
  OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(self, graphicFactory, displayModel);
  return self;
}

- (instancetype)initWithOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel
                       withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintBack
                       withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFront {
  OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(self, displayModel, paintBack, paintFront);
  return self;
}

- (void)drawWithOrgMapsforgeCoreModelBoundingBox:(OrgMapsforgeCoreModelBoundingBox *)boundingBox
                                        withByte:(jbyte)zoomLevel
              withOrgMapsforgeCoreGraphicsCanvas:(id<OrgMapsforgeCoreGraphicsCanvas>)canvas
                  withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)topLeftPoint {
  jlong tileLeft = OrgMapsforgeCoreUtilMercatorProjection_longitudeToTileXWithDouble_withByte_(((OrgMapsforgeCoreModelBoundingBox *) nil_chk(boundingBox))->minLongitude_, zoomLevel);
  jlong tileTop = OrgMapsforgeCoreUtilMercatorProjection_latitudeToTileYWithDouble_withByte_(boundingBox->maxLatitude_, zoomLevel);
  jlong tileRight = OrgMapsforgeCoreUtilMercatorProjection_longitudeToTileXWithDouble_withByte_(boundingBox->maxLongitude_, zoomLevel);
  jlong tileBottom = OrgMapsforgeCoreUtilMercatorProjection_latitudeToTileYWithDouble_withByte_(boundingBox->minLatitude_, zoomLevel);
  jint tileSize = [((OrgMapsforgeMapModelDisplayModel *) nil_chk(self->displayModel_TileGridLayer_)) getTileSize];
  jint pixelX1 = JreFpToInt((OrgMapsforgeCoreUtilMercatorProjection_tileToPixelWithLong_withInt_(tileLeft, tileSize) - ((OrgMapsforgeCoreModelPoint *) nil_chk(topLeftPoint))->x_));
  jint pixelY1 = JreFpToInt((OrgMapsforgeCoreUtilMercatorProjection_tileToPixelWithLong_withInt_(tileTop, tileSize) - topLeftPoint->y_));
  jint pixelX2 = JreFpToInt((OrgMapsforgeCoreUtilMercatorProjection_tileToPixelWithLong_withInt_(tileRight, tileSize) - topLeftPoint->x_ + tileSize));
  jint pixelY2 = JreFpToInt((OrgMapsforgeCoreUtilMercatorProjection_tileToPixelWithLong_withInt_(tileBottom, tileSize) - topLeftPoint->y_ + tileSize));
  for (jint lineX = pixelX1; lineX <= pixelX2 + 1; lineX += tileSize) {
    [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawLineWithInt:lineX withInt:pixelY1 withInt:lineX withInt:pixelY2 withOrgMapsforgeCoreGraphicsPaint:self->paintBack_];
  }
  for (jint lineY = pixelY1; lineY <= pixelY2 + 1; lineY += tileSize) {
    [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawLineWithInt:pixelX1 withInt:lineY withInt:pixelX2 withInt:lineY withOrgMapsforgeCoreGraphicsPaint:self->paintBack_];
  }
  for (jint lineX = pixelX1; lineX <= pixelX2 + 1; lineX += tileSize) {
    [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawLineWithInt:lineX withInt:pixelY1 withInt:lineX withInt:pixelY2 withOrgMapsforgeCoreGraphicsPaint:self->paintFront_];
  }
  for (jint lineY = pixelY1; lineY <= pixelY2 + 1; lineY += tileSize) {
    [((id<OrgMapsforgeCoreGraphicsCanvas>) nil_chk(canvas)) drawLineWithInt:pixelX1 withInt:lineY withInt:pixelX2 withInt:lineY withOrgMapsforgeCoreGraphicsPaint:self->paintFront_];
  }
}

- (void)dealloc {
  RELEASE_(displayModel_TileGridLayer_);
  RELEASE_(paintFront_);
  RELEASE_(paintBack_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeCoreGraphicsPaint;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreGraphicsPaint;", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory:withOrgMapsforgeMapModelDisplayModel:);
  methods[1].selector = @selector(createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory:withOrgMapsforgeMapModelDisplayModel:);
  methods[2].selector = @selector(initWithOrgMapsforgeCoreGraphicsGraphicFactory:withOrgMapsforgeMapModelDisplayModel:);
  methods[3].selector = @selector(initWithOrgMapsforgeMapModelDisplayModel:withOrgMapsforgeCoreGraphicsPaint:withOrgMapsforgeCoreGraphicsPaint:);
  methods[4].selector = @selector(drawWithOrgMapsforgeCoreModelBoundingBox:withByte:withOrgMapsforgeCoreGraphicsCanvas:withOrgMapsforgeCoreModelPoint:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "displayModel_TileGridLayer_", "LOrgMapsforgeMapModelDisplayModel;", .constantValue.asLong = 0, 0x12, 6, -1, -1, -1 },
    { "paintFront_", "LOrgMapsforgeCoreGraphicsPaint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "paintBack_", "LOrgMapsforgeCoreGraphicsPaint;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createPaintFront", "LOrgMapsforgeCoreGraphicsGraphicFactory;LOrgMapsforgeMapModelDisplayModel;", "createPaintBack", "LOrgMapsforgeMapModelDisplayModel;LOrgMapsforgeCoreGraphicsPaint;LOrgMapsforgeCoreGraphicsPaint;", "draw", "LOrgMapsforgeCoreModelBoundingBox;BLOrgMapsforgeCoreGraphicsCanvas;LOrgMapsforgeCoreModelPoint;", "displayModel" };
  static const J2ObjcClassInfo _OrgMapsforgeMapLayerDebugTileGridLayer = { "TileGridLayer", "org.mapsforge.map.layer.debug", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapLayerDebugTileGridLayer;
}

@end

id<OrgMapsforgeCoreGraphicsPaint> OrgMapsforgeMapLayerDebugTileGridLayer_createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel) {
  OrgMapsforgeMapLayerDebugTileGridLayer_initialize();
  id<OrgMapsforgeCoreGraphicsPaint> paint = [((id<OrgMapsforgeCoreGraphicsGraphicFactory>) nil_chk(graphicFactory)) createPaint];
  [((id<OrgMapsforgeCoreGraphicsPaint>) nil_chk(paint)) setColorWithOrgMapsforgeCoreGraphicsColor:JreLoadEnum(OrgMapsforgeCoreGraphicsColor, BLACK)];
  [paint setStrokeWidthWithFloat:2 * [((OrgMapsforgeMapModelDisplayModel *) nil_chk(displayModel)) getScaleFactor]];
  [paint setStyleWithOrgMapsforgeCoreGraphicsStyle:JreLoadEnum(OrgMapsforgeCoreGraphicsStyle, STROKE)];
  return paint;
}

id<OrgMapsforgeCoreGraphicsPaint> OrgMapsforgeMapLayerDebugTileGridLayer_createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel) {
  OrgMapsforgeMapLayerDebugTileGridLayer_initialize();
  id<OrgMapsforgeCoreGraphicsPaint> paint = [((id<OrgMapsforgeCoreGraphicsGraphicFactory>) nil_chk(graphicFactory)) createPaint];
  [((id<OrgMapsforgeCoreGraphicsPaint>) nil_chk(paint)) setColorWithOrgMapsforgeCoreGraphicsColor:JreLoadEnum(OrgMapsforgeCoreGraphicsColor, WHITE)];
  [paint setStrokeWidthWithFloat:4 * [((OrgMapsforgeMapModelDisplayModel *) nil_chk(displayModel)) getScaleFactor]];
  [paint setStyleWithOrgMapsforgeCoreGraphicsStyle:JreLoadEnum(OrgMapsforgeCoreGraphicsStyle, STROKE)];
  return paint;
}

void OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(OrgMapsforgeMapLayerDebugTileGridLayer *self, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel) {
  OrgMapsforgeMapLayerLayer_init(self);
  JreStrongAssign(&self->displayModel_TileGridLayer_, displayModel);
  JreStrongAssign(&self->paintFront_, OrgMapsforgeMapLayerDebugTileGridLayer_createPaintFrontWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(graphicFactory, displayModel));
  JreStrongAssign(&self->paintBack_, OrgMapsforgeMapLayerDebugTileGridLayer_createPaintBackWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(graphicFactory, displayModel));
}

OrgMapsforgeMapLayerDebugTileGridLayer *new_OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerDebugTileGridLayer, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_, graphicFactory, displayModel)
}

OrgMapsforgeMapLayerDebugTileGridLayer *create_OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, OrgMapsforgeMapModelDisplayModel *displayModel) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerDebugTileGridLayer, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapModelDisplayModel_, graphicFactory, displayModel)
}

void OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeMapLayerDebugTileGridLayer *self, OrgMapsforgeMapModelDisplayModel *displayModel, id<OrgMapsforgeCoreGraphicsPaint> paintBack, id<OrgMapsforgeCoreGraphicsPaint> paintFront) {
  OrgMapsforgeMapLayerLayer_init(self);
  JreStrongAssign(&self->displayModel_TileGridLayer_, displayModel);
  JreStrongAssign(&self->paintFront_, paintFront);
  JreStrongAssign(&self->paintBack_, paintBack);
}

OrgMapsforgeMapLayerDebugTileGridLayer *new_OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeMapModelDisplayModel *displayModel, id<OrgMapsforgeCoreGraphicsPaint> paintBack, id<OrgMapsforgeCoreGraphicsPaint> paintFront) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerDebugTileGridLayer, initWithOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_, displayModel, paintBack, paintFront)
}

OrgMapsforgeMapLayerDebugTileGridLayer *create_OrgMapsforgeMapLayerDebugTileGridLayer_initWithOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeMapModelDisplayModel *displayModel, id<OrgMapsforgeCoreGraphicsPaint> paintBack, id<OrgMapsforgeCoreGraphicsPaint> paintFront) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerDebugTileGridLayer, initWithOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_, displayModel, paintBack, paintFront)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapLayerDebugTileGridLayer)
