//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/labels/LabelLayer.java
//

#include "J2ObjC_source.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/mapsforge/core/graphics/Canvas.h"
#include "org/mapsforge/core/graphics/GraphicFactory.h"
#include "org/mapsforge/core/graphics/Matrix.h"
#include "org/mapsforge/core/mapelements/MapElementContainer.h"
#include "org/mapsforge/core/model/BoundingBox.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/map/layer/Layer.h"
#include "org/mapsforge/map/layer/labels/LabelLayer.h"
#include "org/mapsforge/map/layer/labels/LabelStore.h"
#include "org/mapsforge/map/model/DisplayModel.h"
#include "org/mapsforge/map/util/LayerUtil.h"

@interface OrgMapsforgeMapLayerLabelsLabelLayer () {
 @public
  id<OrgMapsforgeMapLayerLabelsLabelStore> labelStore_;
  id<OrgMapsforgeCoreGraphicsMatrix> matrix_;
  id<JavaUtilList> elementsToDraw_;
  id<JavaUtilSet> lastTileSet_;
  jint lastLabelStoreVersion_;
}

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerLabelsLabelLayer, labelStore_, id<OrgMapsforgeMapLayerLabelsLabelStore>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerLabelsLabelLayer, matrix_, id<OrgMapsforgeCoreGraphicsMatrix>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerLabelsLabelLayer, elementsToDraw_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerLabelsLabelLayer, lastTileSet_, id<JavaUtilSet>)

@implementation OrgMapsforgeMapLayerLabelsLabelLayer

- (instancetype)initWithOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                      withOrgMapsforgeMapLayerLabelsLabelStore:(id<OrgMapsforgeMapLayerLabelsLabelStore>)labelStore {
  OrgMapsforgeMapLayerLabelsLabelLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapLayerLabelsLabelStore_(self, graphicFactory, labelStore);
  return self;
}

- (void)drawWithOrgMapsforgeCoreModelBoundingBox:(OrgMapsforgeCoreModelBoundingBox *)boundingBox
                                        withByte:(jbyte)zoomLevel
              withOrgMapsforgeCoreGraphicsCanvas:(id<OrgMapsforgeCoreGraphicsCanvas>)canvas
                  withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)topLeftPoint {
  id<JavaUtilSet> currentTileSet = OrgMapsforgeMapUtilLayerUtil_getTilesWithOrgMapsforgeCoreModelBoundingBox_withByte_withInt_(boundingBox, zoomLevel, [((OrgMapsforgeMapModelDisplayModel *) nil_chk(displayModel_)) getTileSize]);
  if (![((id<JavaUtilSet>) nil_chk(currentTileSet)) isEqual:lastTileSet_] || lastLabelStoreVersion_ != [((id<OrgMapsforgeMapLayerLabelsLabelStore>) nil_chk(labelStore_)) getVersion]) {
    JreStrongAssign(&lastTileSet_, currentTileSet);
    lastLabelStoreVersion_ = [((id<OrgMapsforgeMapLayerLabelsLabelStore>) nil_chk(labelStore_)) getVersion];
    id<JavaUtilList> visibleItems = [self->labelStore_ getVisibleItemsWithJavaUtilSet:currentTileSet];
    JreStrongAssign(&elementsToDraw_, OrgMapsforgeMapUtilLayerUtil_collisionFreeOrderedWithJavaUtilList_(visibleItems));
    JavaUtilCollections_sortWithJavaUtilList_(elementsToDraw_);
  }
  for (OrgMapsforgeCoreMapelementsMapElementContainer * __strong item in nil_chk(elementsToDraw_)) {
    [((OrgMapsforgeCoreMapelementsMapElementContainer *) nil_chk(item)) drawWithOrgMapsforgeCoreGraphicsCanvas:canvas withOrgMapsforgeCoreModelPoint:topLeftPoint withOrgMapsforgeCoreGraphicsMatrix:self->matrix_];
  }
}

- (void)dealloc {
  RELEASE_(labelStore_);
  RELEASE_(matrix_);
  RELEASE_(elementsToDraw_);
  RELEASE_(lastTileSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreGraphicsGraphicFactory:withOrgMapsforgeMapLayerLabelsLabelStore:);
  methods[1].selector = @selector(drawWithOrgMapsforgeCoreModelBoundingBox:withByte:withOrgMapsforgeCoreGraphicsCanvas:withOrgMapsforgeCoreModelPoint:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "labelStore_", "LOrgMapsforgeMapLayerLabelsLabelStore;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "matrix_", "LOrgMapsforgeCoreGraphicsMatrix;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "elementsToDraw_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 3, -1 },
    { "lastTileSet_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 4, -1 },
    { "lastLabelStoreVersion_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeCoreGraphicsGraphicFactory;LOrgMapsforgeMapLayerLabelsLabelStore;", "draw", "LOrgMapsforgeCoreModelBoundingBox;BLOrgMapsforgeCoreGraphicsCanvas;LOrgMapsforgeCoreModelPoint;", "Ljava/util/List<Lorg/mapsforge/core/mapelements/MapElementContainer;>;", "Ljava/util/Set<Lorg/mapsforge/core/model/Tile;>;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapLayerLabelsLabelLayer = { "LabelLayer", "org.mapsforge.map.layer.labels", ptrTable, methods, fields, 7, 0x1, 2, 5, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapLayerLabelsLabelLayer;
}

@end

void OrgMapsforgeMapLayerLabelsLabelLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapLayerLabelsLabelStore_(OrgMapsforgeMapLayerLabelsLabelLayer *self, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapLayerLabelsLabelStore> labelStore) {
  OrgMapsforgeMapLayerLayer_init(self);
  JreStrongAssign(&self->labelStore_, labelStore);
  JreStrongAssign(&self->matrix_, [((id<OrgMapsforgeCoreGraphicsGraphicFactory>) nil_chk(graphicFactory)) createMatrix]);
}

OrgMapsforgeMapLayerLabelsLabelLayer *new_OrgMapsforgeMapLayerLabelsLabelLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapLayerLabelsLabelStore_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapLayerLabelsLabelStore> labelStore) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerLabelsLabelLayer, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapLayerLabelsLabelStore_, graphicFactory, labelStore)
}

OrgMapsforgeMapLayerLabelsLabelLayer *create_OrgMapsforgeMapLayerLabelsLabelLayer_initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapLayerLabelsLabelStore_(id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, id<OrgMapsforgeMapLayerLabelsLabelStore> labelStore) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerLabelsLabelLayer, initWithOrgMapsforgeCoreGraphicsGraphicFactory_withOrgMapsforgeMapLayerLabelsLabelStore_, graphicFactory, labelStore)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapLayerLabelsLabelLayer)
