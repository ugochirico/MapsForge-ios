//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/download/tilesource/TileSource.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/map/layer/download/tilesource/TileSource.h"

@interface OrgMapsforgeMapLayerDownloadTilesourceTileSource : NSObject

@end

@implementation OrgMapsforgeMapLayerDownloadTilesourceTileSource

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getDefaultTimeToLive);
  methods[1].selector = @selector(getParallelRequestsLimit);
  methods[2].selector = @selector(getTileUrlWithOrgMapsforgeCoreModelTile:);
  methods[3].selector = @selector(getZoomLevelMax);
  methods[4].selector = @selector(getZoomLevelMin);
  methods[5].selector = @selector(hasAlpha);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getTileUrl", "LOrgMapsforgeCoreModelTile;", "LJavaNetMalformedURLException;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapLayerDownloadTilesourceTileSource = { "TileSource", "org.mapsforge.map.layer.download.tilesource", ptrTable, methods, NULL, 7, 0x609, 6, 0, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapLayerDownloadTilesourceTileSource;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgMapsforgeMapLayerDownloadTilesourceTileSource)
