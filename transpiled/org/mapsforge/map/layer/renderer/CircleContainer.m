//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/renderer/CircleContainer.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/map/layer/renderer/CircleContainer.h"
#include "org/mapsforge/map/layer/renderer/ShapeType.h"

@implementation OrgMapsforgeMapLayerRendererCircleContainer

- (instancetype)initWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point
                                         withFloat:(jfloat)radius {
  OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(self, point, radius);
  return self;
}

- (OrgMapsforgeMapLayerRendererShapeType *)getShapeType {
  return JreLoadEnum(OrgMapsforgeMapLayerRendererShapeType, CIRCLE);
}

- (void)dealloc {
  RELEASE_(point_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeMapLayerRendererShapeType;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreModelPoint:withFloat:);
  methods[1].selector = @selector(getShapeType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "point_", "LOrgMapsforgeCoreModelPoint;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "radius_", "F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeCoreModelPoint;F" };
  static const J2ObjcClassInfo _OrgMapsforgeMapLayerRendererCircleContainer = { "CircleContainer", "org.mapsforge.map.layer.renderer", ptrTable, methods, fields, 7, 0x0, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapLayerRendererCircleContainer;
}

@end

void OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(OrgMapsforgeMapLayerRendererCircleContainer *self, OrgMapsforgeCoreModelPoint *point, jfloat radius) {
  NSObject_init(self);
  JreStrongAssign(&self->point_, point);
  self->radius_ = radius;
}

OrgMapsforgeMapLayerRendererCircleContainer *new_OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(OrgMapsforgeCoreModelPoint *point, jfloat radius) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerRendererCircleContainer, initWithOrgMapsforgeCoreModelPoint_withFloat_, point, radius)
}

OrgMapsforgeMapLayerRendererCircleContainer *create_OrgMapsforgeMapLayerRendererCircleContainer_initWithOrgMapsforgeCoreModelPoint_withFloat_(OrgMapsforgeCoreModelPoint *point, jfloat radius) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerRendererCircleContainer, initWithOrgMapsforgeCoreModelPoint_withFloat_, point, radius)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapLayerRendererCircleContainer)
