//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/renderer/DestroyThread.java
//

#include "J2ObjC_source.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Thread.h"
#include "org/mapsforge/map/layer/renderer/DatabaseRenderer.h"
#include "org/mapsforge/map/layer/renderer/DestroyThread.h"
#include "org/mapsforge/map/reader/MapDataStore.h"

@interface OrgMapsforgeMapLayerRendererDestroyThread () {
 @public
  id<OrgMapsforgeMapReaderMapDataStore> mapDataStore_;
  OrgMapsforgeMapLayerRendererDatabaseRenderer *renderer_;
  JavaLangThread *thread_;
}

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerRendererDestroyThread, mapDataStore_, id<OrgMapsforgeMapReaderMapDataStore>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerRendererDestroyThread, renderer_, OrgMapsforgeMapLayerRendererDatabaseRenderer *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapLayerRendererDestroyThread, thread_, JavaLangThread *)

@implementation OrgMapsforgeMapLayerRendererDestroyThread

- (instancetype)initWithJavaLangThread:(JavaLangThread *)thread
 withOrgMapsforgeMapReaderMapDataStore:(id<OrgMapsforgeMapReaderMapDataStore>)dataStore
withOrgMapsforgeMapLayerRendererDatabaseRenderer:(OrgMapsforgeMapLayerRendererDatabaseRenderer *)renderer {
  OrgMapsforgeMapLayerRendererDestroyThread_initWithJavaLangThread_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapLayerRendererDatabaseRenderer_(self, thread, dataStore, renderer);
  return self;
}

- (void)run {
  @try {
    [((JavaLangThread *) nil_chk(self->thread_)) interrupt];
    [self->thread_ join];
  }
  @catch (JavaLangInterruptedException *e) {
    [self interrupt];
  }
  @finally {
    [((OrgMapsforgeMapLayerRendererDatabaseRenderer *) nil_chk(self->renderer_)) destroy];
    [((id<OrgMapsforgeMapReaderMapDataStore>) nil_chk(self->mapDataStore_)) close];
  }
}

- (void)dealloc {
  RELEASE_(mapDataStore_);
  RELEASE_(renderer_);
  RELEASE_(thread_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangThread:withOrgMapsforgeMapReaderMapDataStore:withOrgMapsforgeMapLayerRendererDatabaseRenderer:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapDataStore_", "LOrgMapsforgeMapReaderMapDataStore;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "renderer_", "LOrgMapsforgeMapLayerRendererDatabaseRenderer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "thread_", "LJavaLangThread;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangThread;LOrgMapsforgeMapReaderMapDataStore;LOrgMapsforgeMapLayerRendererDatabaseRenderer;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapLayerRendererDestroyThread = { "DestroyThread", "org.mapsforge.map.layer.renderer", ptrTable, methods, fields, 7, 0x0, 2, 3, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapLayerRendererDestroyThread;
}

@end

void OrgMapsforgeMapLayerRendererDestroyThread_initWithJavaLangThread_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapLayerRendererDatabaseRenderer_(OrgMapsforgeMapLayerRendererDestroyThread *self, JavaLangThread *thread, id<OrgMapsforgeMapReaderMapDataStore> dataStore, OrgMapsforgeMapLayerRendererDatabaseRenderer *renderer) {
  JavaLangThread_init(self);
  JreStrongAssign(&self->thread_, thread);
  JreStrongAssign(&self->mapDataStore_, dataStore);
  JreStrongAssign(&self->renderer_, renderer);
}

OrgMapsforgeMapLayerRendererDestroyThread *new_OrgMapsforgeMapLayerRendererDestroyThread_initWithJavaLangThread_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapLayerRendererDatabaseRenderer_(JavaLangThread *thread, id<OrgMapsforgeMapReaderMapDataStore> dataStore, OrgMapsforgeMapLayerRendererDatabaseRenderer *renderer) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerRendererDestroyThread, initWithJavaLangThread_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapLayerRendererDatabaseRenderer_, thread, dataStore, renderer)
}

OrgMapsforgeMapLayerRendererDestroyThread *create_OrgMapsforgeMapLayerRendererDestroyThread_initWithJavaLangThread_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapLayerRendererDatabaseRenderer_(JavaLangThread *thread, id<OrgMapsforgeMapReaderMapDataStore> dataStore, OrgMapsforgeMapLayerRendererDatabaseRenderer *renderer) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerRendererDestroyThread, initWithJavaLangThread_withOrgMapsforgeMapReaderMapDataStore_withOrgMapsforgeMapLayerRendererDatabaseRenderer_, thread, dataStore, renderer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapLayerRendererDestroyThread)
