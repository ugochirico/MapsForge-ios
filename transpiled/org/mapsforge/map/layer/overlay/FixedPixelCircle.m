//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/overlay/FixedPixelCircle.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/core/graphics/Paint.h"
#include "org/mapsforge/core/model/LatLong.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/map/layer/overlay/Circle.h"
#include "org/mapsforge/map/layer/overlay/FixedPixelCircle.h"
#include "org/mapsforge/map/model/DisplayModel.h"

@implementation OrgMapsforgeMapLayerOverlayFixedPixelCircle

- (instancetype)initWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                           withFloat:(jfloat)radius
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke {
  OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(self, latLong, radius, paintFill, paintStroke);
  return self;
}

- (instancetype)initWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                           withFloat:(jfloat)radius
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke
                                         withBoolean:(jboolean)keepAligned {
  OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(self, latLong, radius, paintFill, paintStroke, keepAligned);
  return self;
}

- (jboolean)containsWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)center
                    withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point {
  return [((OrgMapsforgeCoreModelPoint *) nil_chk(center)) distanceWithOrgMapsforgeCoreModelPoint:point] < [self getRadius];
}

- (jint)getRadiusInPixelsWithDouble:(jdouble)latitude
                           withByte:(jbyte)zoomLevel {
  return JreFpToInt(([self getRadius] * [((OrgMapsforgeMapModelDisplayModel *) nil_chk(self->displayModel_)) getScaleFactor]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeCoreModelLatLong:withFloat:withOrgMapsforgeCoreGraphicsPaint:withOrgMapsforgeCoreGraphicsPaint:);
  methods[1].selector = @selector(initWithOrgMapsforgeCoreModelLatLong:withFloat:withOrgMapsforgeCoreGraphicsPaint:withOrgMapsforgeCoreGraphicsPaint:withBoolean:);
  methods[2].selector = @selector(containsWithOrgMapsforgeCoreModelPoint:withOrgMapsforgeCoreModelPoint:);
  methods[3].selector = @selector(getRadiusInPixelsWithDouble:withByte:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgMapsforgeCoreModelLatLong;FLOrgMapsforgeCoreGraphicsPaint;LOrgMapsforgeCoreGraphicsPaint;", "LOrgMapsforgeCoreModelLatLong;FLOrgMapsforgeCoreGraphicsPaint;LOrgMapsforgeCoreGraphicsPaint;Z", "contains", "LOrgMapsforgeCoreModelPoint;LOrgMapsforgeCoreModelPoint;", "getRadiusInPixels", "DB" };
  static const J2ObjcClassInfo _OrgMapsforgeMapLayerOverlayFixedPixelCircle = { "FixedPixelCircle", "org.mapsforge.map.layer.overlay", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapLayerOverlayFixedPixelCircle;
}

@end

void OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeMapLayerOverlayFixedPixelCircle *self, OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke) {
  OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(self, latLong, radius, paintFill, paintStroke, false);
}

OrgMapsforgeMapLayerOverlayFixedPixelCircle *new_OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerOverlayFixedPixelCircle, initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_, latLong, radius, paintFill, paintStroke)
}

OrgMapsforgeMapLayerOverlayFixedPixelCircle *create_OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerOverlayFixedPixelCircle, initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_, latLong, radius, paintFill, paintStroke)
}

void OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeMapLayerOverlayFixedPixelCircle *self, OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned) {
  OrgMapsforgeMapLayerOverlayCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(self, latLong, radius, paintFill, paintStroke, keepAligned);
}

OrgMapsforgeMapLayerOverlayFixedPixelCircle *new_OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapLayerOverlayFixedPixelCircle, initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_, latLong, radius, paintFill, paintStroke, keepAligned)
}

OrgMapsforgeMapLayerOverlayFixedPixelCircle *create_OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapLayerOverlayFixedPixelCircle, initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_, latLong, radius, paintFill, paintStroke, keepAligned)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapLayerOverlayFixedPixelCircle)
