//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/controller/MapViewController.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/map/controller/MapViewController.h"
#include "org/mapsforge/map/model/MapViewPosition.h"
#include "org/mapsforge/map/model/Model.h"
#include "org/mapsforge/map/view/MapView.h"

@interface OrgMapsforgeMapControllerMapViewController () {
 @public
  id<OrgMapsforgeMapViewMapView> mapView_;
}

- (instancetype)initWithOrgMapsforgeMapViewMapView:(id<OrgMapsforgeMapViewMapView>)mapView;

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapControllerMapViewController, mapView_, id<OrgMapsforgeMapViewMapView>)

__attribute__((unused)) static void OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(OrgMapsforgeMapControllerMapViewController *self, id<OrgMapsforgeMapViewMapView> mapView);

__attribute__((unused)) static OrgMapsforgeMapControllerMapViewController *new_OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(id<OrgMapsforgeMapViewMapView> mapView) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapControllerMapViewController *create_OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(id<OrgMapsforgeMapViewMapView> mapView);

@implementation OrgMapsforgeMapControllerMapViewController

+ (OrgMapsforgeMapControllerMapViewController *)createWithOrgMapsforgeMapViewMapView:(id<OrgMapsforgeMapViewMapView>)mapView
                                                       withOrgMapsforgeMapModelModel:(OrgMapsforgeMapModelModel *)model {
  return OrgMapsforgeMapControllerMapViewController_createWithOrgMapsforgeMapViewMapView_withOrgMapsforgeMapModelModel_(mapView, model);
}

- (instancetype)initWithOrgMapsforgeMapViewMapView:(id<OrgMapsforgeMapViewMapView>)mapView {
  OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(self, mapView);
  return self;
}

- (void)onChange {
  [((id<OrgMapsforgeMapViewMapView>) nil_chk(self->mapView_)) repaint];
}

- (void)dealloc {
  RELEASE_(mapView_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeMapControllerMapViewController;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithOrgMapsforgeMapViewMapView:withOrgMapsforgeMapModelModel:);
  methods[1].selector = @selector(initWithOrgMapsforgeMapViewMapView:);
  methods[2].selector = @selector(onChange);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapView_", "LOrgMapsforgeMapViewMapView;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "LOrgMapsforgeMapViewMapView;LOrgMapsforgeMapModelModel;", "LOrgMapsforgeMapViewMapView;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapControllerMapViewController = { "MapViewController", "org.mapsforge.map.controller", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapControllerMapViewController;
}

@end

OrgMapsforgeMapControllerMapViewController *OrgMapsforgeMapControllerMapViewController_createWithOrgMapsforgeMapViewMapView_withOrgMapsforgeMapModelModel_(id<OrgMapsforgeMapViewMapView> mapView, OrgMapsforgeMapModelModel *model) {
  OrgMapsforgeMapControllerMapViewController_initialize();
  OrgMapsforgeMapControllerMapViewController *mapViewController = create_OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(mapView);
  [((OrgMapsforgeMapModelMapViewPosition *) nil_chk(((OrgMapsforgeMapModelModel *) nil_chk(model))->mapViewPosition_)) addObserverWithOrgMapsforgeMapModelCommonObserver:mapViewController];
  return mapViewController;
}

void OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(OrgMapsforgeMapControllerMapViewController *self, id<OrgMapsforgeMapViewMapView> mapView) {
  NSObject_init(self);
  JreStrongAssign(&self->mapView_, mapView);
}

OrgMapsforgeMapControllerMapViewController *new_OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(id<OrgMapsforgeMapViewMapView> mapView) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapControllerMapViewController, initWithOrgMapsforgeMapViewMapView_, mapView)
}

OrgMapsforgeMapControllerMapViewController *create_OrgMapsforgeMapControllerMapViewController_initWithOrgMapsforgeMapViewMapView_(id<OrgMapsforgeMapViewMapView> mapView) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapControllerMapViewController, initWithOrgMapsforgeMapViewMapView_, mapView)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapControllerMapViewController)
