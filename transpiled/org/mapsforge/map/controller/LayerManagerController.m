//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/controller/LayerManagerController.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/map/controller/LayerManagerController.h"
#include "org/mapsforge/map/layer/LayerManager.h"
#include "org/mapsforge/map/model/MapViewDimension.h"
#include "org/mapsforge/map/model/MapViewPosition.h"
#include "org/mapsforge/map/model/Model.h"

@interface OrgMapsforgeMapControllerLayerManagerController () {
 @public
  OrgMapsforgeMapLayerLayerManager *layerManager_;
}

- (instancetype)initWithOrgMapsforgeMapLayerLayerManager:(OrgMapsforgeMapLayerLayerManager *)layerManager;

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapControllerLayerManagerController, layerManager_, OrgMapsforgeMapLayerLayerManager *)

__attribute__((unused)) static void OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(OrgMapsforgeMapControllerLayerManagerController *self, OrgMapsforgeMapLayerLayerManager *layerManager);

__attribute__((unused)) static OrgMapsforgeMapControllerLayerManagerController *new_OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(OrgMapsforgeMapLayerLayerManager *layerManager) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgMapsforgeMapControllerLayerManagerController *create_OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(OrgMapsforgeMapLayerLayerManager *layerManager);

@implementation OrgMapsforgeMapControllerLayerManagerController

+ (OrgMapsforgeMapControllerLayerManagerController *)createWithOrgMapsforgeMapLayerLayerManager:(OrgMapsforgeMapLayerLayerManager *)layerManager
                                                                  withOrgMapsforgeMapModelModel:(OrgMapsforgeMapModelModel *)model {
  return OrgMapsforgeMapControllerLayerManagerController_createWithOrgMapsforgeMapLayerLayerManager_withOrgMapsforgeMapModelModel_(layerManager, model);
}

- (instancetype)initWithOrgMapsforgeMapLayerLayerManager:(OrgMapsforgeMapLayerLayerManager *)layerManager {
  OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(self, layerManager);
  return self;
}

- (void)onChange {
  [((OrgMapsforgeMapLayerLayerManager *) nil_chk(self->layerManager_)) redrawLayers];
}

- (void)dealloc {
  RELEASE_(layerManager_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgMapsforgeMapControllerLayerManagerController;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createWithOrgMapsforgeMapLayerLayerManager:withOrgMapsforgeMapModelModel:);
  methods[1].selector = @selector(initWithOrgMapsforgeMapLayerLayerManager:);
  methods[2].selector = @selector(onChange);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "layerManager_", "LOrgMapsforgeMapLayerLayerManager;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "LOrgMapsforgeMapLayerLayerManager;LOrgMapsforgeMapModelModel;", "LOrgMapsforgeMapLayerLayerManager;" };
  static const J2ObjcClassInfo _OrgMapsforgeMapControllerLayerManagerController = { "LayerManagerController", "org.mapsforge.map.controller", ptrTable, methods, fields, 7, 0x11, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapControllerLayerManagerController;
}

@end

OrgMapsforgeMapControllerLayerManagerController *OrgMapsforgeMapControllerLayerManagerController_createWithOrgMapsforgeMapLayerLayerManager_withOrgMapsforgeMapModelModel_(OrgMapsforgeMapLayerLayerManager *layerManager, OrgMapsforgeMapModelModel *model) {
  OrgMapsforgeMapControllerLayerManagerController_initialize();
  OrgMapsforgeMapControllerLayerManagerController *layerManagerController = create_OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(layerManager);
  [((OrgMapsforgeMapModelMapViewDimension *) nil_chk(((OrgMapsforgeMapModelModel *) nil_chk(model))->mapViewDimension_)) addObserverWithOrgMapsforgeMapModelCommonObserver:layerManagerController];
  [((OrgMapsforgeMapModelMapViewPosition *) nil_chk(model->mapViewPosition_)) addObserverWithOrgMapsforgeMapModelCommonObserver:layerManagerController];
  return layerManagerController;
}

void OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(OrgMapsforgeMapControllerLayerManagerController *self, OrgMapsforgeMapLayerLayerManager *layerManager) {
  NSObject_init(self);
  JreStrongAssign(&self->layerManager_, layerManager);
}

OrgMapsforgeMapControllerLayerManagerController *new_OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(OrgMapsforgeMapLayerLayerManager *layerManager) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapControllerLayerManagerController, initWithOrgMapsforgeMapLayerLayerManager_, layerManager)
}

OrgMapsforgeMapControllerLayerManagerController *create_OrgMapsforgeMapControllerLayerManagerController_initWithOrgMapsforgeMapLayerLayerManager_(OrgMapsforgeMapLayerLayerManager *layerManager) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapControllerLayerManagerController, initWithOrgMapsforgeMapLayerLayerManager_, layerManager)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapControllerLayerManagerController)
