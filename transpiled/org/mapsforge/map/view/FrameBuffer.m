//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/view/FrameBuffer.java
//

#include "J2ObjC_source.h"
#include "org/mapsforge/core/graphics/Bitmap.h"
#include "org/mapsforge/core/graphics/GraphicContext.h"
#include "org/mapsforge/core/graphics/GraphicFactory.h"
#include "org/mapsforge/core/graphics/Matrix.h"
#include "org/mapsforge/core/model/Dimension.h"
#include "org/mapsforge/core/model/MapPosition.h"
#include "org/mapsforge/core/model/Point.h"
#include "org/mapsforge/map/model/DisplayModel.h"
#include "org/mapsforge/map/model/FrameBufferModel.h"
#include "org/mapsforge/map/view/FrameBuffer.h"

@interface OrgMapsforgeMapViewFrameBuffer () {
 @public
  id<OrgMapsforgeCoreGraphicsBitmap> bitmap1_;
  id<OrgMapsforgeCoreGraphicsBitmap> bitmap2_;
  OrgMapsforgeCoreModelDimension *dimension_;
  OrgMapsforgeMapModelDisplayModel *displayModel_;
  OrgMapsforgeMapModelFrameBufferModel *frameBufferModel_;
  id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory_;
  id<OrgMapsforgeCoreGraphicsMatrix> matrix_;
}

- (void)centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)mapViewDimension;

- (void)destroyBitmaps;

- (void)scale__WithFloat:(jfloat)scaleFactor
               withFloat:(jfloat)pivotDistanceX
               withFloat:(jfloat)pivotDistanceY;

@end

J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, bitmap1_, id<OrgMapsforgeCoreGraphicsBitmap>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, bitmap2_, id<OrgMapsforgeCoreGraphicsBitmap>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, dimension_, OrgMapsforgeCoreModelDimension *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, displayModel_, OrgMapsforgeMapModelDisplayModel *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, frameBufferModel_, OrgMapsforgeMapModelFrameBufferModel *)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, graphicFactory_, id<OrgMapsforgeCoreGraphicsGraphicFactory>)
J2OBJC_FIELD_SETTER(OrgMapsforgeMapViewFrameBuffer, matrix_, id<OrgMapsforgeCoreGraphicsMatrix>)

inline jboolean OrgMapsforgeMapViewFrameBuffer_get_IS_TRANSPARENT();
#define OrgMapsforgeMapViewFrameBuffer_IS_TRANSPARENT false
J2OBJC_STATIC_FIELD_CONSTANT(OrgMapsforgeMapViewFrameBuffer, IS_TRANSPARENT, jboolean)

__attribute__((unused)) static void OrgMapsforgeMapViewFrameBuffer_centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension_(OrgMapsforgeMapViewFrameBuffer *self, OrgMapsforgeCoreModelDimension *mapViewDimension);

__attribute__((unused)) static void OrgMapsforgeMapViewFrameBuffer_destroyBitmaps(OrgMapsforgeMapViewFrameBuffer *self);

__attribute__((unused)) static void OrgMapsforgeMapViewFrameBuffer_scale__WithFloat_withFloat_withFloat_(OrgMapsforgeMapViewFrameBuffer *self, jfloat scaleFactor, jfloat pivotDistanceX, jfloat pivotDistanceY);

@implementation OrgMapsforgeMapViewFrameBuffer

- (instancetype)initWithOrgMapsforgeMapModelFrameBufferModel:(OrgMapsforgeMapModelFrameBufferModel *)frameBufferModel
                        withOrgMapsforgeMapModelDisplayModel:(OrgMapsforgeMapModelDisplayModel *)displayModel
                  withOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory {
  OrgMapsforgeMapViewFrameBuffer_initWithOrgMapsforgeMapModelFrameBufferModel_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsGraphicFactory_(self, frameBufferModel, displayModel, graphicFactory);
  return self;
}

- (void)adjustMatrixWithFloat:(jfloat)diffX
                    withFloat:(jfloat)diffY
                    withFloat:(jfloat)scaleFactor
withOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)mapViewDimension
                    withFloat:(jfloat)pivotDistanceX
                    withFloat:(jfloat)pivotDistanceY {
  @synchronized(self) {
    if (self->dimension_ == nil) {
      return;
    }
    [((id<OrgMapsforgeCoreGraphicsMatrix>) nil_chk(self->matrix_)) reset];
    OrgMapsforgeMapViewFrameBuffer_centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension_(self, mapViewDimension);
    if (pivotDistanceX == 0 && pivotDistanceY == 0) {
      [self->matrix_ translateWithFloat:diffX withFloat:diffY];
    }
    OrgMapsforgeMapViewFrameBuffer_scale__WithFloat_withFloat_withFloat_(self, scaleFactor, pivotDistanceX, pivotDistanceY);
  }
}

- (void)destroy {
  @synchronized(self) {
    OrgMapsforgeMapViewFrameBuffer_destroyBitmaps(self);
  }
}

- (void)drawWithOrgMapsforgeCoreGraphicsGraphicContext:(id<OrgMapsforgeCoreGraphicsGraphicContext>)graphicContext {
  @synchronized(self) {
    [((id<OrgMapsforgeCoreGraphicsGraphicContext>) nil_chk(graphicContext)) fillColorWithInt:[((OrgMapsforgeMapModelDisplayModel *) nil_chk(self->displayModel_)) getBackgroundColor]];
    if (self->bitmap1_ != nil) {
      [graphicContext drawBitmapWithOrgMapsforgeCoreGraphicsBitmap:self->bitmap1_ withOrgMapsforgeCoreGraphicsMatrix:self->matrix_];
    }
  }
}

- (void)frameFinishedWithOrgMapsforgeCoreModelMapPosition:(OrgMapsforgeCoreModelMapPosition *)frameMapPosition {
  @synchronized(self) {
    id<OrgMapsforgeCoreGraphicsBitmap> bitmapTemp = self->bitmap1_;
    JreStrongAssign(&self->bitmap1_, self->bitmap2_);
    JreStrongAssign(&self->bitmap2_, bitmapTemp);
    if (self->bitmap2_ != nil) {
      [self->bitmap2_ setBackgroundColorWithInt:[((OrgMapsforgeMapModelDisplayModel *) nil_chk(self->displayModel_)) getBackgroundColor]];
    }
  }
  [((OrgMapsforgeMapModelFrameBufferModel *) nil_chk(self->frameBufferModel_)) setMapPositionWithOrgMapsforgeCoreModelMapPosition:frameMapPosition];
}

- (OrgMapsforgeCoreModelDimension *)getDimension {
  @synchronized(self) {
    return self->dimension_;
  }
}

- (id<OrgMapsforgeCoreGraphicsBitmap>)getDrawingBitmap {
  @synchronized(self) {
    return self->bitmap2_;
  }
}

- (void)setDimensionWithOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)dimension {
  @synchronized(self) {
    if (self->dimension_ != nil && [self->dimension_ isEqual:dimension]) {
      return;
    }
    JreStrongAssign(&self->dimension_, dimension);
    OrgMapsforgeMapViewFrameBuffer_destroyBitmaps(self);
    if (((OrgMapsforgeCoreModelDimension *) nil_chk(dimension))->width_ > 0 && dimension->height_ > 0) {
      JreStrongAssign(&self->bitmap1_, [((id<OrgMapsforgeCoreGraphicsGraphicFactory>) nil_chk(self->graphicFactory_)) createBitmapWithInt:dimension->width_ withInt:dimension->height_ withBoolean:OrgMapsforgeMapViewFrameBuffer_IS_TRANSPARENT]);
      JreStrongAssign(&self->bitmap2_, [self->graphicFactory_ createBitmapWithInt:dimension->width_ withInt:dimension->height_ withBoolean:OrgMapsforgeMapViewFrameBuffer_IS_TRANSPARENT]);
    }
  }
}

- (void)centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension:(OrgMapsforgeCoreModelDimension *)mapViewDimension {
  OrgMapsforgeMapViewFrameBuffer_centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension_(self, mapViewDimension);
}

- (void)destroyBitmaps {
  OrgMapsforgeMapViewFrameBuffer_destroyBitmaps(self);
}

- (void)scale__WithFloat:(jfloat)scaleFactor
               withFloat:(jfloat)pivotDistanceX
               withFloat:(jfloat)pivotDistanceY {
  OrgMapsforgeMapViewFrameBuffer_scale__WithFloat_withFloat_withFloat_(self, scaleFactor, pivotDistanceX, pivotDistanceY);
}

- (void)dealloc {
  RELEASE_(bitmap1_);
  RELEASE_(bitmap2_);
  RELEASE_(dimension_);
  RELEASE_(displayModel_);
  RELEASE_(frameBufferModel_);
  RELEASE_(graphicFactory_);
  RELEASE_(matrix_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreModelDimension;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgMapsforgeCoreGraphicsBitmap;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgMapsforgeMapModelFrameBufferModel:withOrgMapsforgeMapModelDisplayModel:withOrgMapsforgeCoreGraphicsGraphicFactory:);
  methods[1].selector = @selector(adjustMatrixWithFloat:withFloat:withFloat:withOrgMapsforgeCoreModelDimension:withFloat:withFloat:);
  methods[2].selector = @selector(destroy);
  methods[3].selector = @selector(drawWithOrgMapsforgeCoreGraphicsGraphicContext:);
  methods[4].selector = @selector(frameFinishedWithOrgMapsforgeCoreModelMapPosition:);
  methods[5].selector = @selector(getDimension);
  methods[6].selector = @selector(getDrawingBitmap);
  methods[7].selector = @selector(setDimensionWithOrgMapsforgeCoreModelDimension:);
  methods[8].selector = @selector(centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension:);
  methods[9].selector = @selector(destroyBitmaps);
  methods[10].selector = @selector(scale__WithFloat:withFloat:withFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "IS_TRANSPARENT", "Z", .constantValue.asBOOL = OrgMapsforgeMapViewFrameBuffer_IS_TRANSPARENT, 0x1a, -1, -1, -1, -1 },
    { "bitmap1_", "LOrgMapsforgeCoreGraphicsBitmap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bitmap2_", "LOrgMapsforgeCoreGraphicsBitmap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dimension_", "LOrgMapsforgeCoreModelDimension;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "displayModel_", "LOrgMapsforgeMapModelDisplayModel;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "frameBufferModel_", "LOrgMapsforgeMapModelFrameBufferModel;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "graphicFactory_", "LOrgMapsforgeCoreGraphicsGraphicFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "matrix_", "LOrgMapsforgeCoreGraphicsMatrix;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgMapsforgeMapModelFrameBufferModel;LOrgMapsforgeMapModelDisplayModel;LOrgMapsforgeCoreGraphicsGraphicFactory;", "adjustMatrix", "FFFLOrgMapsforgeCoreModelDimension;FF", "draw", "LOrgMapsforgeCoreGraphicsGraphicContext;", "frameFinished", "LOrgMapsforgeCoreModelMapPosition;", "setDimension", "LOrgMapsforgeCoreModelDimension;", "centerFrameBufferToMapView", "scale", "FFF" };
  static const J2ObjcClassInfo _OrgMapsforgeMapViewFrameBuffer = { "FrameBuffer", "org.mapsforge.map.view", ptrTable, methods, fields, 7, 0x1, 11, 8, -1, -1, -1, -1, -1 };
  return &_OrgMapsforgeMapViewFrameBuffer;
}

@end

void OrgMapsforgeMapViewFrameBuffer_initWithOrgMapsforgeMapModelFrameBufferModel_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapViewFrameBuffer *self, OrgMapsforgeMapModelFrameBufferModel *frameBufferModel, OrgMapsforgeMapModelDisplayModel *displayModel, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory) {
  NSObject_init(self);
  JreStrongAssign(&self->frameBufferModel_, frameBufferModel);
  JreStrongAssign(&self->displayModel_, displayModel);
  JreStrongAssign(&self->graphicFactory_, graphicFactory);
  JreStrongAssign(&self->matrix_, [((id<OrgMapsforgeCoreGraphicsGraphicFactory>) nil_chk(graphicFactory)) createMatrix]);
}

OrgMapsforgeMapViewFrameBuffer *new_OrgMapsforgeMapViewFrameBuffer_initWithOrgMapsforgeMapModelFrameBufferModel_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapModelFrameBufferModel *frameBufferModel, OrgMapsforgeMapModelDisplayModel *displayModel, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory) {
  J2OBJC_NEW_IMPL(OrgMapsforgeMapViewFrameBuffer, initWithOrgMapsforgeMapModelFrameBufferModel_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsGraphicFactory_, frameBufferModel, displayModel, graphicFactory)
}

OrgMapsforgeMapViewFrameBuffer *create_OrgMapsforgeMapViewFrameBuffer_initWithOrgMapsforgeMapModelFrameBufferModel_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsGraphicFactory_(OrgMapsforgeMapModelFrameBufferModel *frameBufferModel, OrgMapsforgeMapModelDisplayModel *displayModel, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory) {
  J2OBJC_CREATE_IMPL(OrgMapsforgeMapViewFrameBuffer, initWithOrgMapsforgeMapModelFrameBufferModel_withOrgMapsforgeMapModelDisplayModel_withOrgMapsforgeCoreGraphicsGraphicFactory_, frameBufferModel, displayModel, graphicFactory)
}

void OrgMapsforgeMapViewFrameBuffer_centerFrameBufferToMapViewWithOrgMapsforgeCoreModelDimension_(OrgMapsforgeMapViewFrameBuffer *self, OrgMapsforgeCoreModelDimension *mapViewDimension) {
  jfloat dx = (((OrgMapsforgeCoreModelDimension *) nil_chk(self->dimension_))->width_ - ((OrgMapsforgeCoreModelDimension *) nil_chk(mapViewDimension))->width_) / -2.0f;
  jfloat dy = (self->dimension_->height_ - mapViewDimension->height_) / -2.0f;
  [((id<OrgMapsforgeCoreGraphicsMatrix>) nil_chk(self->matrix_)) translateWithFloat:dx withFloat:dy];
}

void OrgMapsforgeMapViewFrameBuffer_destroyBitmaps(OrgMapsforgeMapViewFrameBuffer *self) {
  if (self->bitmap1_ != nil) {
    [self->bitmap1_ decrementRefCount];
    JreStrongAssign(&self->bitmap1_, nil);
  }
  if (self->bitmap2_ != nil) {
    [self->bitmap2_ decrementRefCount];
    JreStrongAssign(&self->bitmap2_, nil);
  }
}

void OrgMapsforgeMapViewFrameBuffer_scale__WithFloat_withFloat_withFloat_(OrgMapsforgeMapViewFrameBuffer *self, jfloat scaleFactor, jfloat pivotDistanceX, jfloat pivotDistanceY) {
  if (scaleFactor != 1) {
    OrgMapsforgeCoreModelPoint *center = [((OrgMapsforgeCoreModelDimension *) nil_chk(self->dimension_)) getCenter];
    jfloat pivotX = (jfloat) (pivotDistanceX + ((OrgMapsforgeCoreModelPoint *) nil_chk(center))->x_);
    jfloat pivotY = (jfloat) (pivotDistanceY + center->y_);
    [((id<OrgMapsforgeCoreGraphicsMatrix>) nil_chk(self->matrix_)) scale__WithFloat:scaleFactor withFloat:scaleFactor withFloat:pivotX withFloat:pivotY];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgMapsforgeMapViewFrameBuffer)
