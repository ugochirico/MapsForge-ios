//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/kxml2/io/KXmlParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgKxml2IoKXmlParser")
#ifdef RESTRICT_OrgKxml2IoKXmlParser
#define INCLUDE_ALL_OrgKxml2IoKXmlParser 0
#else
#define INCLUDE_ALL_OrgKxml2IoKXmlParser 1
#endif
#undef RESTRICT_OrgKxml2IoKXmlParser

#if !defined (OrgKxml2IoKXmlParser_) && (INCLUDE_ALL_OrgKxml2IoKXmlParser || defined(INCLUDE_OrgKxml2IoKXmlParser))
#define OrgKxml2IoKXmlParser_

#define RESTRICT_OrgXmlpullV1XmlPullParser 1
#define INCLUDE_OrgXmlpullV1XmlPullParser 1
#include "org/xmlpull/v1/XmlPullParser.h"

@class IOSCharArray;
@class IOSIntArray;
@class JavaIoInputStream;
@class JavaIoReader;

@interface OrgKxml2IoKXmlParser : NSObject < OrgXmlpullV1XmlPullParser >

#pragma mark Public

- (instancetype)init;

- (void)defineEntityReplacementTextWithNSString:(NSString *)entity
                                   withNSString:(NSString *)value;

- (jint)getAttributeCount;

- (NSString *)getAttributeNameWithInt:(jint)index;

- (NSString *)getAttributeNamespaceWithInt:(jint)index;

- (NSString *)getAttributePrefixWithInt:(jint)index;

- (NSString *)getAttributeTypeWithInt:(jint)index;

- (NSString *)getAttributeValueWithInt:(jint)index;

- (NSString *)getAttributeValueWithNSString:(NSString *)namespace_
                               withNSString:(NSString *)name;

- (jint)getColumnNumber;

- (jint)getDepth;

- (jint)getEventType;

- (jboolean)getFeatureWithNSString:(NSString *)feature;

- (NSString *)getInputEncoding;

- (jint)getLineNumber;

- (NSString *)getName;

- (NSString *)getNamespace;

- (NSString *)getNamespaceWithNSString:(NSString *)prefix;

- (jint)getNamespaceCountWithInt:(jint)depth;

- (NSString *)getNamespacePrefixWithInt:(jint)pos;

- (NSString *)getNamespaceUriWithInt:(jint)pos;

- (NSString *)getPositionDescription;

- (NSString *)getPrefix;

- (id)getPropertyWithNSString:(NSString *)property;

- (NSString *)getText;

- (IOSCharArray *)getTextCharactersWithIntArray:(IOSIntArray *)poslen;

- (jboolean)isAttributeDefaultWithInt:(jint)index;

- (jboolean)isEmptyElementTag;

- (jboolean)isWhitespace;

- (jint)next;

- (jint)nextTag;

- (NSString *)nextText;

- (jint)nextToken;

- (void)requireWithInt:(jint)type
          withNSString:(NSString *)namespace_
          withNSString:(NSString *)name;

- (void)setFeatureWithNSString:(NSString *)feature
                   withBoolean:(jboolean)value;

- (void)setInputWithJavaIoInputStream:(JavaIoInputStream *)is
                         withNSString:(NSString *)_enc;

- (void)setInputWithJavaIoReader:(JavaIoReader *)reader;

- (void)setPropertyWithNSString:(NSString *)property
                         withId:(id)value;

- (void)skipSubTree;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgKxml2IoKXmlParser)

FOUNDATION_EXPORT void OrgKxml2IoKXmlParser_init(OrgKxml2IoKXmlParser *self);

FOUNDATION_EXPORT OrgKxml2IoKXmlParser *new_OrgKxml2IoKXmlParser_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgKxml2IoKXmlParser *create_OrgKxml2IoKXmlParser_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgKxml2IoKXmlParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgKxml2IoKXmlParser")
