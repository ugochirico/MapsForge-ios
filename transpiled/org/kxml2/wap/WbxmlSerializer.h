//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/kxml2/wap/WbxmlSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgKxml2WapWbxmlSerializer")
#ifdef RESTRICT_OrgKxml2WapWbxmlSerializer
#define INCLUDE_ALL_OrgKxml2WapWbxmlSerializer 0
#else
#define INCLUDE_ALL_OrgKxml2WapWbxmlSerializer 1
#endif
#undef RESTRICT_OrgKxml2WapWbxmlSerializer

#if !defined (OrgKxml2WapWbxmlSerializer_) && (INCLUDE_ALL_OrgKxml2WapWbxmlSerializer || defined(INCLUDE_OrgKxml2WapWbxmlSerializer))
#define OrgKxml2WapWbxmlSerializer_

#define RESTRICT_OrgXmlpullV1XmlSerializer 1
#define INCLUDE_OrgXmlpullV1XmlSerializer 1
#include "org/xmlpull/v1/XmlSerializer.h"

@class IOSCharArray;
@class IOSObjectArray;
@class JavaIoByteArrayOutputStream;
@class JavaIoOutputStream;
@class JavaIoWriter;
@class JavaLangBoolean;
@class JavaUtilHashtable;
@class JavaUtilVector;

@interface OrgKxml2WapWbxmlSerializer : NSObject < OrgXmlpullV1XmlSerializer > {
 @public
  JavaUtilHashtable *stringTable_;
  JavaIoOutputStream *out_;
  JavaIoByteArrayOutputStream *buf_;
  JavaIoByteArrayOutputStream *stringTableBuf_;
  NSString *pending_;
  jint depth_;
  NSString *name_;
  NSString *namespace__;
  JavaUtilVector *attributes_;
  JavaUtilHashtable *attrStartTable_;
  JavaUtilHashtable *attrValueTable_;
  JavaUtilHashtable *tagTable_;
}

#pragma mark Public

- (instancetype)init;

- (id<OrgXmlpullV1XmlSerializer>)attributeWithNSString:(NSString *)namespace_
                                          withNSString:(NSString *)name
                                          withNSString:(NSString *)value;

- (void)cdsectWithNSString:(NSString *)cdsect;

- (void)checkPendingWithBoolean:(jboolean)degenerated;

- (void)commentWithNSString:(NSString *)comment;

- (void)docdeclWithNSString:(NSString *)docdecl;

- (void)endDocument;

- (id<OrgXmlpullV1XmlSerializer>)endTagWithNSString:(NSString *)namespace_
                                       withNSString:(NSString *)name;

- (void)entityRefWithNSString:(NSString *)er;

- (void)flush;

- (jint)getDepth;

- (jboolean)getFeatureWithNSString:(NSString *)name;

- (NSString *)getName;

- (NSString *)getNamespace;

- (NSString *)getPrefixWithNSString:(NSString *)nsp
                        withBoolean:(jboolean)create;

- (id)getPropertyWithNSString:(NSString *)name;

- (void)ignorableWhitespaceWithNSString:(NSString *)sp;

- (void)processingInstructionWithNSString:(NSString *)pi;

- (void)setAttrStartTableWithInt:(jint)page
               withNSStringArray:(IOSObjectArray *)attrStartTable;

- (void)setAttrValueTableWithInt:(jint)page
               withNSStringArray:(IOSObjectArray *)attrValueTable;

- (void)setFeatureWithNSString:(NSString *)name
                   withBoolean:(jboolean)value;

- (void)setOutputWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                           withNSString:(NSString *)encoding;

- (void)setOutputWithJavaIoWriter:(JavaIoWriter *)writer;

- (void)setPrefixWithNSString:(NSString *)prefix
                 withNSString:(NSString *)nsp;

- (void)setPropertyWithNSString:(NSString *)property
                         withId:(id)value;

- (void)setTagTableWithInt:(jint)page
         withNSStringArray:(IOSObjectArray *)tagTable;

- (void)startDocumentWithNSString:(NSString *)s
              withJavaLangBoolean:(JavaLangBoolean *)b;

- (id<OrgXmlpullV1XmlSerializer>)startTagWithNSString:(NSString *)namespace_
                                         withNSString:(NSString *)name;

- (id<OrgXmlpullV1XmlSerializer>)textWithCharArray:(IOSCharArray *)chars
                                           withInt:(jint)start
                                           withInt:(jint)len;

- (id<OrgXmlpullV1XmlSerializer>)textWithNSString:(NSString *)text;

- (void)writeWapExtensionWithInt:(jint)type
                          withId:(id)data;

#pragma mark Package-Private

+ (void)writeIntWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                               withInt:(jint)i;

- (void)writeStrIWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                           withNSString:(NSString *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgKxml2WapWbxmlSerializer)

J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, stringTable_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, out_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, buf_, JavaIoByteArrayOutputStream *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, stringTableBuf_, JavaIoByteArrayOutputStream *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, pending_, NSString *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, namespace__, NSString *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, attributes_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, attrStartTable_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, attrValueTable_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgKxml2WapWbxmlSerializer, tagTable_, JavaUtilHashtable *)

FOUNDATION_EXPORT void OrgKxml2WapWbxmlSerializer_init(OrgKxml2WapWbxmlSerializer *self);

FOUNDATION_EXPORT OrgKxml2WapWbxmlSerializer *new_OrgKxml2WapWbxmlSerializer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgKxml2WapWbxmlSerializer *create_OrgKxml2WapWbxmlSerializer_init();

FOUNDATION_EXPORT void OrgKxml2WapWbxmlSerializer_writeIntWithJavaIoOutputStream_withInt_(JavaIoOutputStream *outArg, jint i);

J2OBJC_TYPE_LITERAL_HEADER(OrgKxml2WapWbxmlSerializer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgKxml2WapWbxmlSerializer")
