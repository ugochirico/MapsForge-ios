//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/kxml2/wap/wml/Wml.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgKxml2WapWmlWml")
#ifdef RESTRICT_OrgKxml2WapWmlWml
#define INCLUDE_ALL_OrgKxml2WapWmlWml 0
#else
#define INCLUDE_ALL_OrgKxml2WapWmlWml 1
#endif
#undef RESTRICT_OrgKxml2WapWmlWml

#if !defined (OrgKxml2WapWmlWml_) && (INCLUDE_ALL_OrgKxml2WapWmlWml || defined(INCLUDE_OrgKxml2WapWmlWml))
#define OrgKxml2WapWmlWml_

@class IOSObjectArray;
@class OrgKxml2WapWbxmlParser;
@class OrgKxml2WapWbxmlSerializer;

@interface OrgKxml2WapWmlWml : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgKxml2WapWbxmlParser *)createParser;

+ (OrgKxml2WapWbxmlSerializer *)createSerializer;

@end

J2OBJC_STATIC_INIT(OrgKxml2WapWmlWml)

inline IOSObjectArray *OrgKxml2WapWmlWml_get_TAG_TABLE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgKxml2WapWmlWml_TAG_TABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgKxml2WapWmlWml, TAG_TABLE, IOSObjectArray *)

inline IOSObjectArray *OrgKxml2WapWmlWml_get_ATTR_START_TABLE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgKxml2WapWmlWml_ATTR_START_TABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgKxml2WapWmlWml, ATTR_START_TABLE, IOSObjectArray *)

inline IOSObjectArray *OrgKxml2WapWmlWml_get_ATTR_VALUE_TABLE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgKxml2WapWmlWml_ATTR_VALUE_TABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgKxml2WapWmlWml, ATTR_VALUE_TABLE, IOSObjectArray *)

FOUNDATION_EXPORT void OrgKxml2WapWmlWml_init(OrgKxml2WapWmlWml *self);

FOUNDATION_EXPORT OrgKxml2WapWbxmlParser *OrgKxml2WapWmlWml_createParser();

FOUNDATION_EXPORT OrgKxml2WapWbxmlSerializer *OrgKxml2WapWmlWml_createSerializer();

J2OBJC_TYPE_LITERAL_HEADER(OrgKxml2WapWmlWml)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgKxml2WapWmlWml")
